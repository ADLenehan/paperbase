{"at":"2025-10-18T19:36:42.625787","root":".","tree":[".","\u251c\u2500\u2500 backend/ (5043 files)","\u2502   \u251c\u2500\u2500 app/ (52 files)","\u2502   \u2502   \u251c\u2500\u2500 api/ (16 files)","\u2502   \u2502   \u251c\u2500\u2500 core/ (5 files)","\u2502   \u2502   \u251c\u2500\u2500 data/ (1 files)","\u2502   \u2502   \u251c\u2500\u2500 migrations/ (2 files)","\u2502   \u2502   \u251c\u2500\u2500 models/ (11 files)","\u2502   \u2502   \u251c\u2500\u2500 services/ (12 files)","\u2502   \u2502   \u2514\u2500\u2500 utils/ (3 files)","\u2502   \u251c\u2500\u2500 mcp_server/ (19 files)","\u2502   \u2502   \u251c\u2500\u2500 prompts/ (2 files)","\u2502   \u2502   \u251c\u2500\u2500 resources/ (4 files)","\u2502   \u2502   \u251c\u2500\u2500 services/ (4 files)","\u2502   \u2502   \u2514\u2500\u2500 tools/ (5 files)","\u2502   \u251c\u2500\u2500 migrations/ (2 files)","\u2502   \u251c\u2500\u2500 tests/ (5 files)","\u2502   \u251c\u2500\u2500 uploads/","\u2502   \u2502   \u251c\u2500\u2500 contract/","\u2502   \u2502   \u251c\u2500\u2500 legal_agreement_addendum/"],"stats":{"total_files":122,"total_directories":25,"fully_parsed":{"python":80,"javascript":33,"shell":1},"listed_only":{"json":4,"sql":1,"shell":1,"html":1,"css":1},"markdown_files":43},"f":{"backend/app/api/analytics.py":["p",["get_dashboard_metrics:16:async (db:Session = Depends(get_db))::Get dashboard metrics","get_schema_stats:98:async (db:Session = Depends(get_db))::Get statistics for each schema","get_trends:133:async (days:int = 7, db:Session = Depends(get_db))::Get processing trends over time"]],"backend/app/api/audit.py":["p",["get_audit_queue:50:async (template_id:Optional[int] = Query(None, description=\"Filter by template ID\"), min_confidence:float = Query(0.0, ge=0.0, le=1.0), max_confidence:Optional[float] = Query(None, ge=0.0, le=1.0, description=\"Max confidence threshold (uses settings default if not provided)\"), page:int = Query(1, ge=1), size:int = Query(20, ge=1, le=100), count_only:bool = Query(False, description=\"Return only count\"), db:Session = Depends(get_db))::","get_document_audit_fields:128:async (document_id:int, db:Session = Depends(get_db))::","verify_field:175:async (request:VerifyFieldRequest, db:Session = Depends(get_db))::","get_audit_stats:280:async (template_id:Optional[int] = None, db:Session = Depends(get_db))::Get audit statistics"],{"AuditFieldResponse":["19",[]],"VerifyFieldRequest":["33",[]]}],"backend/app/api/bulk_upload.py":["p",["upload_and_analyze:38:async (files:List[UploadFile] = File(...), background_tasks:BackgroundTasks = None, db:Session = Depends(get_db))::","confirm_template:193:async (request:ConfirmTemplateRequest, db:Session = Depends(get_db))::","create_new_template:259:async (request:CreateTemplateRequest, db:Session = Depends(get_db))::","bulk_verify:396:async (verifications:List[Dict[str, Any]], db:Session = Depends(get_db))::"],{"ConfirmTemplateRequest":["23",[]],"CreateTemplateRequest":["28",[]]}],"backend/app/api/documents.py":["p",["upload_documents:24:async (schema_id:int, files:List[UploadFile] = File(...), db:Session = Depends(get_db))::Upload documents for processing","process_documents:76:async (request:dict, background_tasks:BackgroundTasks, db:Session = Depends(get_db))::Process uploaded documents with Reducto extraction","process_single_document:100:async (document_id:int)::Background task to process a single document","list_documents:297:async (schema_id:Optional[int] = None, status:Optional[str] = None, page:int = 1, size:int = 100, db:Session = Depends(get_db))::List documents with optional filters","get_document:364:async (document_id:int, db:Session = Depends(get_db))::Get document details with extractions","assign_template:409:async (document_id:int, request:dict, db:Session = Depends(get_db))::Assign a template/schema to a document with optional custom fields"]],"backend/app/api/export.py":["p",["list_exportable_templates:35:async (db:Session = Depends(get_db))::","get_export_summary:76:async (template_id:Optional[int] = Query(None), date_from:Optional[date] = Query(None), date_to:Optional[date] = Query(None), db:Session = Depends(get_db)):get_export_summary:","export_template_csv:114:async (template_id:int, date_from:Optional[date] = Query(None), date_to:Optional[date] = Query(None), confidence_min:float = Query(0.0, ge=0.0, le=1.0), verified_only:bool = Query(False), include_metadata:bool = Query(True), db:Session = Depends(get_db))::","export_template_excel:168:async (template_id:int, date_from:Optional[date] = Query(None), date_to:Optional[date] = Query(None), confidence_min:float = Query(0.0, ge=0.0, le=1.0), verified_only:bool = Query(False), include_metadata:bool = Query(True), db:Session = Depends(get_db))::","export_template_json:222:async (template_id:int, date_from:Optional[date] = Query(None), date_to:Optional[date] = Query(None), confidence_min:float = Query(0.0, ge=0.0, le=1.0), verified_only:bool = Query(False), format_type:str = Query(\"pretty\", description=\"pretty, compact, or records (JSON Lines)\"), db:Session = Depends(get_db))::","export_custom:273:async (request:ExportRequest, format:str = Query(\"excel\", description=\"csv, excel, or json\"), db:Session = Depends(get_db))::","export_documents:341:async (document_ids:str = Query(..., description=\"Comma-separated document IDs\"), format:str = Query(\"excel\", description=\"csv, excel, or json\"), include_metadata:bool = Query(True), db:Session = Depends(get_db))::"],{"ExportRequest":["21",[]]}],"backend/app/api/extractions.py":["p",["upload_and_extract:44:async (files:List[UploadFile] = File(...), template_ids:List[int] = None, background_tasks:BackgroundTasks = None, db:Session = Depends(get_db))::","batch_extract:120:async (request:BatchExtractRequest, background_tasks:BackgroundTasks, db:Session = Depends(get_db)):batch_extract:","list_extractions:156:async (physical_file_id:int, db:Session = Depends(get_db)):list_extractions:","get_extraction_detail:204:async (extraction_id:int, db:Session = Depends(get_db))::","reprocess_extraction:252:async (extraction_id:int, request:ReprocessRequest = None, background_tasks:BackgroundTasks = None, db:Session = Depends(get_db))::","get_extraction_stats:308:async (db:Session = Depends(get_db)):get_extraction_stats:","delete_extraction:328:async (extraction_id:int, db:Session = Depends(get_db))::"],{"UploadAndExtractRequest":["24",[]],"BatchExtractRequest":["28",[]],"ReprocessRequest":["34",[]]}],"backend/app/api/files.py":["p",["get_document_preview:18:async (document_id:int = Path(..., description=\"Document ID\"), db:Session = Depends(get_db))::","download_document:93:async (document_id:int = Path(..., description=\"Document ID\"), db:Session = Depends(get_db))::"]],"backend/app/api/folders.py":["p",["browse_folders:33:async (path:str = \"\", db:Session = Depends(get_db))::","reorganize_files:61:async (request:ReorganizeRequest, db:Session = Depends(get_db))::","get_folder_stats:95:async (path:str = \"\", db:Session = Depends(get_db)):get_folder_stats:","search_in_folder:121:async (path:str = \"\", q:str = \"\", db:Session = Depends(get_db)):search_in_folder:","get_breadcrumbs:154:async (path:str = \"\"):get_breadcrumbs:","get_folder_tree:183:async (max_depth:int = 3, db:Session = Depends(get_db)):get_folder_tree:","get_template_folders:213:async (db:Session = Depends(get_db))::"],{"ReorganizeRequest":["20",[]],"SearchRequest":["25",[]]}],"backend/app/api/nl_query.py":["p",["natural_language_query:42:async (request:NLQueryRequest, db:Session = Depends(get_db)):_format_result,_generate_suggested_actions,_handle_aggregation_query,_hash_query:","_handle_aggregation_query:228:async (parsed_query:Dict[str, Any], elastic_service:ElasticsearchService, results:List[Dict[str, Any]])>Dict[str, Any]::Handle aggregation queries like totals, averages, grouping.","_format_result:285:(result:Dict[str, Any])>Dict[str, Any]::Format a single result for frontend display.","_generate_suggested_actions:300:(query_type:str, total_count:int, results:List[Dict[str, Any]])>List[str]::Generate contextual suggested actions based on results.","_hash_query:342:(query:str)>str::Generate a hash for query caching.","get_cache_stats:350:async (db:Session = Depends(get_db))::","clear_cache:389:async (db:Session = Depends(get_db))::","get_query_suggestions:404:async (db:Session = Depends(get_db))::"],{"NLQueryRequest":["22",[]],"NLQueryResponse":["27",[]]}],"backend/app/api/onboarding.py":["p",["analyze_samples:28:async (files:List[UploadFile] = File(...), db:Session = Depends(get_db))::","list_schemas:129:async (db:Session = Depends(get_db))::List all available schemas","create_schema:150:async (schema_data:dict, db:Session = Depends(get_db))::Create a new schema (e.g., when saving as new template)","get_schema:191:async (schema_id:int, db:Session = Depends(get_db))::Get schema details","get_schema_document_count:207:async (schema_id:int, db:Session = Depends(get_db))::Get count of documents using this schema","update_schema:229:async (schema_id:int, schema_data:dict, db:Session = Depends(get_db))::Update schema fields (after manual editing)","re_extract_documents:260:async (schema_id:int, db:Session = Depends(get_db))::","add_field_from_description:319:async (schema_id:int, description:dict, db:Session = Depends(get_db))::Add a field using natural language description","modify_schema_with_prompt:379:async (request:ModifySchemaRequest, db:Session = Depends(get_db)):modify_schema_with_prompt:"],{"ModifySchemaRequest":["19",[]]}],"backend/app/api/rematch.py":["p",["rematch_all_documents:23:async (db:Session = Depends(get_db))>Dict[str, Any]::","rematch_single_document:144:async (document_id:int, db:Session = Depends(get_db))>Dict[str, Any]::"]],"backend/app/api/search.py":["p",["search_documents:26:async (request:SearchRequest, db:Session = Depends(get_db)):_add_folder_filter:","_add_folder_filter:240:(es_query:Dict[str, Any], folder_path:str)>Dict[str, Any]::Add folder_path filter to ES query using prefix match","get_available_filters:272:async ()::Get available filter options and value distributions"],{"SearchRequest":["16",[]]}],"backend/app/api/settings.py":["p",["get_default_context:51:(db:Session)::","get_all_settings:67:async (include_metadata:bool = Query(True, description=\"Include metadata like source, description, etc.\"), db:Session = Depends(get_db))>SettingsListResponse:get_all_settings,get_default_context:","get_setting:110:async (key:str, db:Session = Depends(get_db))>SettingResponse:get_default_context,get_setting:","update_setting:171:async (key:str, request:SettingUpdateRequest, level:str = Query(\"organization\", pattern=\"^(system|organization|user)$\", description=\"Setting level\"), db:Session = Depends(get_db)):get_default_context:","delete_setting:249:async (key:str, level:str = Query(\"organization\", pattern=\"^(system|organization|user)$\", description=\"Setting level\"), db:Session = Depends(get_db)):delete_setting,get_default_context:","initialize_defaults:290:async (db:Session = Depends(get_db)):initialize_defaults:","get_categories:312:async ()::","get_settings_by_category:332:async (category:str, db:Session = Depends(get_db)):get_all_settings,get_default_context:"],{"SettingUpdateRequest":["22",[]],"SettingResponse":["30",[]],"SettingsListResponse":["42",[]]}],"backend/app/api/templates.py":["p",["list_templates:13:async (db:Session = Depends(get_db)):seed_builtin_templates:","get_template:49:async (template_id:int, db:Session = Depends(get_db))::Get full template details including all fields","get_templates_by_category:69:async (category:str, db:Session = Depends(get_db))::Get all templates in a specific category","track_template_usage:91:async (template_id:int, db:Session = Depends(get_db))::Increment usage count when template is selected","seed_templates:105:async (db:Session = Depends(get_db)):seed_builtin_templates:","seed_builtin_templates:119:(db:Session)>list[SchemaTemplate]::Helper function to seed built-in templates"]],"backend/app/api/verification.py":["p",["get_verification_queue:24:async (schema_id:Optional[int] = None, page:int = 1, size:int = 20, db:Session = Depends(get_db))::Get items that need verification (low confidence)","verify_field:69:async (field_id:int, verification_data:dict, db:Session = Depends(get_db))::","get_verification_stats:159:async (schema_id:Optional[int] = None, db:Session = Depends(get_db))::Get verification statistics","create_verification_session:211:async (schema_id:int, db:Session = Depends(get_db))::Create a new verification session","complete_verification_session:242:async (session_id:str, db:Session = Depends(get_db))::Mark verification session as complete"]],"backend/app/core/config.py":["p",{"Settings":["5",[]]}],"backend/app/core/database.py":["p",["get_db:20:()::"]],"backend/app/core/error_handlers.py":["p",["paperbase_exception_handler:24:async (request:Request, exc:PaperbaseException)>JSONResponse::","validation_exception_handler:55:async (request:Request, exc:RequestValidationError)>JSONResponse::","http_exception_handler:90:async (request:Request, exc:StarletteHTTPException)>JSONResponse::","general_exception_handler:115:async (request:Request, exc:Exception)>JSONResponse::","register_error_handlers:146:(app)::"]],"backend/app/core/exceptions.py":["p",{"PaperbaseException":["6",["__init__:8:(self, message:str, status_code:int = 500):__init__:"]],"ValidationError":["14",["__init__:16:(self, message:str):__init__:"]],"NotFoundError":["20",["__init__:22:(self, resource:str, identifier:str):__init__:"]],"ExternalServiceError":["27",["__init__:29:(self, service:str, message:str, original_error:Exception = None):__init__:"]],"ReductoError":["38",["__init__:40:(self, message:str, original_error:Exception = None):__init__:"]],"ClaudeError":["44",["__init__:46:(self, message:str, original_error:Exception = None):__init__:"]],"ElasticsearchError":["50",["__init__:52:(self, message:str, original_error:Exception = None):__init__:"]],"ProcessingError":["56",["__init__:58:(self, document_id:str, message:str):__init__:"]],"SchemaError":["64",["__init__:66:(self, message:str):__init__:"]],"FileUploadError":["70",["__init__:72:(self, message:str):__init__:"]],"ConfigurationError":["76",["__init__:78:(self, message:str):__init__:"]]}],"backend/app/main.py":["p",["startup_event:56:async ()::","health_check:116:async ()::","root:126:async ()::"]],"backend/app/migrations/migrate_settings.py":["p",["migrate_settings:28:(db:Session, dry_run:bool = False)::","rollback_settings:103:(db:Session)::"]],"backend/app/migrations/migrate_to_extractions.py":["p",["infer_template_from_schema:28:(schema_id:int, db:Session)>int::","generate_organized_path:58:(doc:Document, template_id:int, db:Session)>str::","migrate_documents_to_extractions:77:(db:Session, dry_run:bool = False):generate_organized_path,infer_template_from_schema:","rollback_migration:178:(db:Session)::"]],"backend/app/models/batch.py":["p",{"Batch":["16",[]]}],"backend/app/models/document.py":["p",{"Document":["7",[]],"ExtractedField":["40",[]]}],"backend/app/models/extraction.py":["p",{"Extraction":["7",[]]}],"backend/app/models/physical_file.py":["p",{"PhysicalFile":["7",[]]}],"backend/app/models/query_pattern.py":["p",{"QueryPattern":["6",[]],"QueryCache":["44",[]]}],"backend/app/models/query_validation.py":["p",{"QueryValidation":["14",[]],"QueryImprovement":["86",[]],"FieldAliasLearning":["132",["update_confidence:178:(self)::Recalculate confidence score based on success/failure counts."]]}],"backend/app/models/schema.py":["p",{"Schema":["7",[]],"FieldDefinition":["20",[]]}],"backend/app/models/settings.py":["p",{"Organization":["23",[]],"User":["45",[]],"Settings":["73",[]]}],"backend/app/models/template.py":["p",{"SchemaTemplate":["6",[]]}],"backend/app/models/verification.py":["p",{"Verification":["7",[]],"VerificationSession":["32",[]]}],"backend/app/services/claude_service.py":["p",{"ClaudeService":["12",["__init__:24:(self)::","analyze_sample_documents:33:async (self, parsed_documents:List[Dict[str, Any]])>Dict[str, Any]:_build_schema_generation_prompt:","_build_schema_generation_prompt:115:(self, parsed_documents:List[Dict[str, Any]])>str::Build prompt for schema generation"]]}],"backend/app/services/elastic_service.py":["p",{"ElasticsearchService":["10",["__init__:11:(self)::","create_index:16:async (self, schema:Dict[str, Any])>None:_get_es_field_type:Create Elasticsearch index with dynamic mapping based on schema","_get_es_field_type:107:(self, field_type:str)>str::Map schema field type to Elasticsearch type","index_document:127:async (self, document_id:int, filename:str, extracted_fields:Dict[str, Any], confidence_scores:Dict[str, float], full_text:str = \"\", schema:Optional[Dict[str, Any]] = None, field_metadata:Optional[Dict[str, Any]] = None)>str:_build_canonical_fields:","_build_canonical_fields:202:(self, extracted_fields:Dict[str, Any], field_metadata:Dict[str, Any])>Dict[str, Any]::","search:275:async (self, query:Optional[str] = None, filters:Optional[Dict[str, Any]] = None, min_confidence:Optional[float] = None, custom_query:Optional[Dict[str, Any]] = None, page:int = 1, size:int = 10)>Dict[str, Any]:search:Search documents with optional filters","get_document:353:async (self, document_id:int)>Optional[Dict[str, Any]]::Get document by ID","update_document:369:async (self, document_id:int, updated_fields:Dict[str, Any])>None::Update document fields (e.g., after verification)","get_aggregations:378:async (self, field:str)>Dict[str, Any]:search:Get aggregations for analytics","health_check:395:async (self)>bool::Check Elasticsearch connection","close:404:async (self):close:Close Elasticsearch connection","create_template_signatures_index:408:async (self)>None::Create index for template signatures (for similarity matching)","index_template_signature:445:async (self, template_id:int, template_name:str, field_names:List[str], sample_text:str = \"\", category:str = \"general\")>str::","find_similar_templates:485:async (self, document_text:str, document_fields:List[str], min_score:float = 0.4)>List[Dict[str, Any]]:search:"]]}],"backend/app/services/export_service.py":["p",{"ExportService":["19",["build_export_query:33:(db:Session, template_id:Optional[int] = None, schema_id:Optional[int] = None, date_from:Optional[date] = None, date_to:Optional[date] = None, confidence_min:float = 0.0, verified_only:bool = False, status:Optional[str] = None, document_ids:Optional[List[int]] = None)::Build a query for extracting documents based on filters","documents_to_records:87:(documents:List[Document])>List[Dict[str, Any]]::","documents_to_long_format:119:(documents:List[Document])>List[Dict[str, Any]]::","export_to_csv:152:(records:List[Dict[str, Any]], include_metadata:bool = True)>bytes::Export records to CSV format","export_to_excel:176:(records:List[Dict[str, Any]], include_metadata:bool = True, sheet_name:str = \"Extracted Data\")>bytes::Export records to Excel format with formatting","export_to_json:221:(records:List[Dict[str, Any]], format_type:str = \"array\")>str::","get_export_summary:246:(db:Session, template_id:Optional[int] = None, date_from:Optional[date] = None, date_to:Optional[date] = None)>Dict[str, Any]::Get summary statistics for export","export_by_template:304:(db:Session, template_id:int, format:str = \"excel\", date_from:Optional[date] = None, date_to:Optional[date] = None, **kwargs)>bytes:build_export_query,documents_to_records,export_to_csv,export_to_excel,export_to_json:"]]}],"backend/app/services/extraction_service.py":["p",{"ExtractionService":["22",["__init__:28:(self)::","create_extraction:38:async (self, physical_file:PhysicalFile, template_id:int, db:Session, confidence:float = None)>Extraction::","process_extraction:95:async (self, extraction_id:int, db:Session)>Extraction::","batch_extract:216:async (self, physical_file_ids:List[int], template_id:int, batch_name:str, db:Session)>Dict[str, Any]:create_extraction,process_extraction:","list_extractions:301:(self, physical_file_id:Optional[int] = None, template_id:Optional[int] = None, status:Optional[str] = None, db:Session = None)>List[Extraction]::","get_extraction_stats:325:(self, db:Session)>Dict[str, Any]::Get extraction statistics."]]}],"backend/app/services/field_normalizer.py":["p",{"FieldNormalizer":["22",["__init__:30:(self, schema_registry)::","initialize:99:async (self):_infer_canonical_category:","_infer_canonical_category:151:(self, field_name:str)>Optional[str]::","get_canonical_name:171:(self, field_name:str)>str:_infer_canonical_category:","get_field_names:188:(self, canonical_name:str)>List[str]::","normalize_query_fields:207:(self, query:Dict[str, Any], mode:str = \"expand\")>Dict[str, Any]:_canonicalize_fields,_expand_canonical_fields:","_expand_canonical_fields:223:(self, query:Dict[str, Any])>Dict[str, Any]:_expand_canonical_fields,get_field_names:","_canonicalize_fields:307:(self, query:Dict[str, Any])>Dict[str, Any]::","build_canonical_document:321:(self, extracted_fields:Dict[str, Any], template_name:Optional[str] = None)>Dict[str, Any]:get_canonical_name:","get_search_fields_for_category:351:(self, canonical_name:str, boost_pattern:Optional[str] = None)>List[str]:get_field_names:","get_aggregation_field:381:(self, canonical_name:str, prefer_keyword:bool = True)>str:get_field_names:"]]}],"backend/app/services/file_service.py":["p",{"FileService":["19",["__init__:24:(self, upload_dir:str = None)::","upload_file:31:async (self, file:UploadFile, db:Session)>tuple[PhysicalFile, bool]::","upload_multiple:110:async (self, files:list[UploadFile], db:Session)>list[tuple[PhysicalFile, bool]]:upload_file:","get_file:127:(self, file_id:int, db:Session)>Optional[PhysicalFile]::Get physical file by ID.","get_file_by_hash:131:(self, file_hash:str, db:Session)>Optional[PhysicalFile]::Get physical file by hash.","delete_file:135:(self, file_id:int, db:Session)>bool::","get_storage_stats:173:(self, db:Session)>dict::Get storage statistics."]]}],"backend/app/services/folder_service.py":["p",{"FolderService":["17",["browse_folder:23:(self, path:str, db:Session)>Dict[str, Any]::","reorganize_extractions:92:(self, extraction_ids:List[int], target_path:str, db:Session)>int::","get_folder_stats:130:(self, path:str, db:Session)>Dict[str, Any]::","create_folder_path:182:(self, template_name:str, date_str:Optional[str] = None)>str::","search_in_folder:205:(self, path:str, query:str, db:Session)>List[Dict[str, Any]]::","get_breadcrumbs:247:(self, path:str)>List[Dict[str, str]]::","get_folder_tree:274:(self, db:Session, max_depth:int = 3)>Dict[str, Any]:_tree_to_list:","_tree_to_list:306:(self, tree:Dict[str, Any], parent_path:str = \"\")>List[Dict[str, Any]]:_tree_to_list:Convert tree dict to list format for frontend."]]}],"backend/app/services/query_optimizer.py":["p",{"QueryOptimizer":["23",["__init__:31:(self, schema_registry=None)::","initialize_from_registry:58:async (self)::","understand_query_intent:86:(self, query:str, available_fields:List[str])>Dict[str, Any]:_extract_date_filters,_extract_numeric_filters,_extract_text_filters:","_extract_numeric_filters:177:(self, query:str, query_lower:str, available_fields:List[str], analysis:Dict[str, Any]):_find_target_field:Extract numeric range filters from query.","_extract_date_filters:226:(self, query_lower:str, analysis:Dict[str, Any])::Extract date range filters from query.","_extract_text_filters:259:(self, query:str, query_lower:str, available_fields:List[str], analysis:Dict[str, Any])::Extract text-based filters from query.","_find_target_field:287:(self, query_lower:str, available_fields:List[str], canonical_name:str)>Optional[str]:_resolve_field:","_resolve_field:310:(self, canonical_name:str, available_fields:List[str])>str::","build_optimized_query:342:(self, query:str, analysis:Dict[str, Any], available_fields:List[str])>Dict[str, Any]:_get_date_range:","_get_date_range:440:(self, range_name:str)>Dict[str, str]::Get Elasticsearch date range for common ranges.","should_use_claude:458:(self, analysis:Dict[str, Any])>bool::"]]}],"backend/app/services/reducto_service.py":["p",{"ReductoService":["12",["__init__:21:(self)::","parse_document:28:async (self, file_path:str)>Dict[str, Any]:_extract_confidence_scores,upload_file:","upload_file:159:()::","extract_structured:111:async (self, schema:Dict[str, Any], file_path:str = None, job_id:str = None)>Dict[str, Any]:_parse_extraction_with_bbox,parse_document,upload_file:","get_job_status:197:async (self, job_id:str)>Dict[str, Any]::Get status of async processing job","_extract_confidence_scores:209:(self, result:Dict[str, Any])>Dict[str, float]::Extract confidence scores from Reducto response blocks","get_confidence_label:221:(self, score:float)>str::","extract_field_from_chunks:239:(self, chunks:List[Dict[str, Any]], hints:List[str])>Optional[Dict[str, Any]]:_extract_value_after_hint:","_extract_value_after_hint:271:(self, text:str, hint:str)>str::Extract value that appears after the hint in text","_parse_extraction_with_bbox:290:(self, raw_extractions:Any)>Dict[str, Any]::"]]}],"backend/app/services/schema_registry.py":["p",{"SchemaRegistry":["10",["__init__:19:(self, db:Session)::","get_field_context:26:async (self, template_name:Optional[str] = None, schema_id:Optional[int] = None)>Dict[str, Any]:_generate_aliases,_generate_typical_queries,_get_default_context,_get_standard_field_description,_get_standard_field_type:","get_all_templates_context:109:async (self)>List[Dict[str, Any]]:get_field_context:","get_canonical_field_mapping:123:async (self)>Dict[str, List[str]]:_get_canonical_name:","_generate_aliases:153:(self, field_name:str, field_type:str)>List[str]::Generate semantic aliases for a field name.","_generate_typical_queries:189:(self, field_name:str, field_type:str)>List[str]::Generate typical query patterns for a field.","_get_canonical_name:220:(self, field_name:str, field_type:str)>str::Determine canonical category for a field.","_get_standard_field_type:252:(self, field_name:str)>str::Get type for standard metadata fields.","_get_standard_field_description:262:(self, field_name:str)>str::Get description for standard metadata fields.","_get_default_context:272:(self)>Dict[str, Any]::Return default context when no schema is found."]]}],"backend/app/services/settings_service.py":["p",{"SettingsService":["20",["__init__:23:(self, db:Session)::","get_setting:32:(self, key:str, user_id:Optional[int] = None, org_id:Optional[int] = None, default:Any = None)>Any:_deserialize_value:","get_all_settings:90:(self, user_id:Optional[int] = None, org_id:Optional[int] = None, include_metadata:bool = False)>Dict[str, Any]:_deserialize_value:","set_setting:176:(self, key:str, value:Any, value_type:str, user_id:Optional[int] = None, org_id:Optional[int] = None, description:Optional[str] = None)>Settings:_serialize_value:","delete_setting:238:(self, key:str, user_id:Optional[int] = None, org_id:Optional[int] = None)>bool::","initialize_defaults:265:(self)>None:set_setting:","get_or_create_default_org:288:(self)>Organization::Get or create the default organization for MVP.","get_or_create_default_user:305:(self, org_id:int)>User::Get or create the default user for MVP.","_serialize_value:324:(self, value:Any, value_type:str)>str::Serialize value to string for storage.","_deserialize_value:333:(self, value:str, value_type:str)>Any::Deserialize value from string."]]}],"backend/app/utils/file_organization.py":["p",["get_template_folder:22:(template_name:Optional[str] = None)>str::","organize_document_file:51:(current_path:str, filename:str, template_name:Optional[str] = None)>str:get_template_folder:","get_template_document_count:83:(template_name:str)>int:get_template_folder:","list_template_folders:100:()>list[dict]::"]],"backend/app/utils/hashing.py":["p",["calculate_file_hash:5:(file_path:str)>str::","calculate_content_hash:25:(content:bytes)>str::"]],"backend/app/utils/template_matching.py":["p",["hybrid_match_document:22:async (document:Document, elastic_service:ElasticsearchService, claude_service:ClaudeService, available_templates:List[Dict[str, Any]], db:Optional[Session] = None)>Dict[str, Any]:_no_match_result,extract_field_names_from_parse:","auto_match_documents:152:async (db:Session, documents:List[Document], elastic_service:ElasticsearchService, claude_service:ClaudeService, available_templates:List[Dict[str, Any]], threshold:float = 0.70)>List[Dict[str, Any]]:hybrid_match_document:","extract_field_names_from_parse:207:(parse_result:Dict[str, Any])>List[str]::","_no_match_result:237:(reasoning:str, error:str = None)>Dict[str, Any]::Helper to return no-match result"]],"backend/mcp_server/__main__.py":["p",["main:33:()::Main entry point for MCP server"]],"backend/mcp_server/config.py":["p",{"MCPConfig":["13",[]]}],"backend/mcp_server/prompts/analysis.py":["p",["analyze_low_confidence_prompt:15:async ()>Dict[str, Any]::","compare_templates_prompt:77:async (template_ids:str = \"\")>Dict[str, Any]::","document_summary_prompt:144:async (document_id:int = None)>Dict[str, Any]::"]],"backend/mcp_server/resources/documents.py":["p",["get_document_fields_resource:15:async (document_id:int)>Dict[str, Any]::"]],"backend/mcp_server/resources/stats.py":["p",["get_daily_stats_resource:17:async (days:int = 7)>Dict[str, Any]::","get_system_health_resource:50:async ()>Dict[str, Any]::","get_audit_summary_resource:93:async ()>Dict[str, Any]::"]],"backend/mcp_server/resources/templates.py":["p",["get_all_templates_resource:16:async ()>Dict[str, Any]::","get_template_resource:51:async (template_id:int)>Dict[str, Any]::"]],"backend/mcp_server/server.py":["p",["search_documents:45:async (query:str, folder_path:Optional[str] = None, template_name:Optional[str] = None, status:Optional[str] = None, min_confidence:Optional[float] = None, limit:int = 20)>Dict[str, Any]:search_documents:","get_document_details:71:async (document_id:int)>Dict[str, Any]:get_document_details:","get_document_by_filename:88:async (filename:str, exact_match:bool = False)>Dict[str, Any]:get_document_by_filename:","list_templates:103:async ()>Dict[str, Any]:list_templates:","get_template_details:114:async (template_id:int)>Dict[str, Any]:get_template_details:","get_template_stats:131:async (template_id:Optional[int] = None, include_field_stats:bool = False)>Dict[str, Any]:get_template_stats:","compare_templates:146:async (template_ids:List[int])>Dict[str, Any]:compare_templates:","get_extraction_stats:163:async (days:int = 7, template_id:Optional[int] = None)>Dict[str, Any]:get_extraction_stats:","get_audit_queue:182:async (confidence_threshold:Optional[float] = None, template_id:Optional[int] = None, limit:int = 50)>Dict[str, Any]:get_audit_queue:","get_low_confidence_fields:206:async (min_confidence:float = 0.0, max_confidence:float = 0.6, field_name:Optional[str] = None, limit:int = 50)>Dict[str, Any]:get_low_confidence_fields:","get_audit_stats:225:async ()>Dict[str, Any]:get_audit_stats:","templates_resource:238:async ()>str::All available document templates","template_resource:246:async (template_id:int)>str::Specific template details","daily_stats_resource:254:async ()>str::Daily processing statistics (last 7 days)","system_health_resource:262:async ()>str::System health status","audit_summary_resource:270:async ()>str::Audit queue summary statistics","document_fields_resource:278:async (document_id:int)>str::Extracted fields for a specific document","analyze_low_confidence:288:async ()>str::Analyze low-confidence extractions and identify improvement opportunities","compare_templates_prompt:295:async (template_ids:str = \"\")>str:compare_templates_prompt:Compare multiple document templates to understand similarities and differences","document_summary:302:async (document_id:Optional[int] = None)>str::Generate comprehensive document extraction summary","on_startup:311:async ()::Initialize services on server startup","on_shutdown:319:async ()::Cleanup on server shutdown"]],"backend/mcp_server/services/cache_service.py":["p",["cached:194:(category:str = \"default\", key_prefix:str = \"\"):cached,decorator,get,get_all_templates,make_key,set,wrapper:"],{"CacheService":["21",["__init__:29:(self)::Initialize cache with configured max size","_get_cache_for_category:60:(self, category:str)>TTLCache:get:Get the appropriate cache based on category","get:69:(self, key:str, category:str = \"default\")>Optional[Any]:_get_cache_for_category,get:","set:93:(self, key:str, value:Any, category:str = \"default\")>None:_get_cache_for_category:","delete:109:(self, key:str, category:str = \"default\")>None:_get_cache_for_category:Delete value from cache","clear:119:(self, category:Optional[str] = None)>None:_get_cache_for_category,clear:","get_stats:140:(self)>dict::Get cache statistics","make_key:170:(*args, **kwargs)>str::"]]}],"backend/mcp_server/services/db_service.py":["p",{"DatabaseService":["25",["__init__:33:(self)::Initialize database connection","get_session:55:async (self)>AsyncSession::Get database session","get_document:60:async (self, document_id:int)>Optional[Dict[str, Any]]::","search_documents:122:async (self, query:Optional[str] = None, template_id:Optional[int] = None, status:Optional[str] = None, min_confidence:Optional[float] = None, date_from:Optional[datetime] = None, date_to:Optional[datetime] = None, limit:int = 20, offset:int = 0)>Tuple[List[Dict[str, Any]], int]::","get_all_templates:207:async (self)>List[Dict[str, Any]]::","get_template:230:async (self, template_id:int)>Optional[Dict[str, Any]]::Get template by ID with usage statistics","get_audit_queue:273:async (self, confidence_threshold:Optional[float] = None, limit:int = 50)>List[Dict[str, Any]]::","get_daily_stats:321:async (self, days:int = 7)>Dict[str, Any]::","close:391:async (self)::Close database connections"]]}],"backend/mcp_server/services/es_service.py":["p",{"QueryOptimizerLegacy":["26",["__init__:34:(self)::Initialize query optimizer with field mappings","understand_query_intent:53:(self, query:str, available_fields:List[str])>Dict[str, Any]:_resolve_field:","_resolve_field:152:(self, canonical_name:str, available_fields:List[str])>str::","build_optimized_query:184:(self, query:str, analysis:Dict[str, Any], available_fields:List[str])>Dict[str, Any]:_get_date_range:","_get_date_range:259:(self, range_name:str)>Dict[str, str]::Get Elasticsearch date range for common ranges"]],"ElasticsearchMCPService":["270",["__init__:276:(self)::Initialize ES service with query optimizer","search_with_context:289:async (self, query:str, available_fields:Optional[List[str]] = None, folder_path:Optional[str] = None, limit:int = 20, offset:int = 0)>Dict[str, Any]:_get_available_fields,build_optimized_query,understand_query_intent:","_get_available_fields:341:async (self)>List[str]::Get list of available fields from ES index mapping","get_document:353:async (self, document_id:int)>Optional[Dict[str, Any]]:get_document:Get document from ES by ID","get_aggregations:361:async (self, field:str, size:int = 10)>Dict[str, Any]:get_aggregations:Get aggregations for analytics","execute_custom_query:369:async (self, es_query:Dict[str, Any], limit:int = 20)>Dict[str, Any]::","health_check:392:async (self)>bool:health_check:Check ES connection health","close:396:async (self):close:Close ES connection"]]}],"backend/mcp_server/tools/analytics.py":["p",["get_extraction_stats:19:async (days:int = 7, template_id:Optional[int] = None)>Dict[str, Any]:get_extraction_stats:","get_confidence_distribution:62:async (template_id:Optional[int] = None, days:Optional[int] = None)>Dict[str, Any]:get_confidence_distribution:","get_processing_timeline:123:async (days:int = 30, granularity:str = \"daily\")>Dict[str, Any]:get_processing_timeline:","get_field_accuracy_report:161:async (template_id:int, field_name:Optional[str] = None)>Dict[str, Any]:get_field_accuracy_report:"]],"backend/mcp_server/tools/audit.py":["p",["get_audit_queue:19:async (confidence_threshold:Optional[float] = None, template_id:Optional[int] = None, limit:int = 50)>Dict[str, Any]:get_audit_queue:","get_low_confidence_fields:90:async (min_confidence:float = 0.0, max_confidence:float = 0.6, field_name:Optional[str] = None, limit:int = 50)>Dict[str, Any]:get_audit_queue,get_low_confidence_fields:","get_audit_stats:143:async ()>Dict[str, Any]:get_audit_queue,get_audit_stats:","get_verification_history:189:async (document_id:Optional[int] = None, days:int = 30, limit:int = 50)>Dict[str, Any]:get_verification_history:"]],"backend/mcp_server/tools/documents.py":["p",["search_documents:24:async (query:str, folder_path:Optional[str] = None, template_name:Optional[str] = None, status:Optional[str] = None, min_confidence:Optional[float] = None, limit:int = 20)>Dict[str, Any]:search_documents:","get_document_details:111:async (document_id:int)>Dict[str, Any]:get_document_details:","get_document_by_filename:173:async (filename:str, exact_match:bool = False)>Dict[str, Any]:get_document_by_filename,search_documents:","get_recent_documents:223:async (days:int = 7, limit:int = 20, status:Optional[str] = None)>Dict[str, Any]:get_recent_documents,search_documents:"]],"backend/mcp_server/tools/templates.py":["p",["list_templates:15:async ()>Dict[str, Any]:list_templates:","get_template_details:57:async (template_id:int)>Dict[str, Any]:get_template_details:","get_template_stats:112:async (template_id:Optional[int] = None, include_field_stats:bool = False)>Dict[str, Any]:get_template_stats:","compare_templates:177:async (template_ids:List[int])>Dict[str, Any]:compare_templates:"]],"backend/migrations/add_pipeline_fields.py":["p",["migrate:18:()::Add pipeline fields to documents table","rollback:45:()::Remove pipeline fields (SQLite doesn't support DROP COLUMN easily)"]],"backend/t/conftest.py":["p",["db_session:23:()::","client:37:(db_session):override_get_db:","sample_schema:54:()::","sample_reducto_response:90:()::","sample_extraction:117:()::"]],"backend/t/test_analytics.py":["p",["test_get_dashboard_metrics_empty:12:(client, db_session)::Test dashboard metrics with no data","test_get_dashboard_metrics_with_data:24:(client, db_session)::Test dashboard metrics with sample data","test_get_schema_stats:106:(client, db_session)::Test schema statistics endpoint","test_get_trends:177:(client, db_session)::Test trends endpoint","test_get_trends_custom_days:224:(client, db_session)::Test trends endpoint with custom day range","test_dashboard_confidence_by_field:235:(client, db_session)::Test confidence aggregation by field"]],"backend/t/test_claude_service.py":["p",["test_analyze_sample_documents_success:13:async (sample_schema)::Test successful schema generation","test_analyze_sample_documents_no_docs:39:async ()::Test schema generation with no documents","test_analyze_sample_documents_invalid_json:51:async ()::Test handling invalid JSON response","test_analyze_sample_documents_missing_fields:75:async ()::Test handling schema with missing required fields","test_generate_reducto_config:101:async (sample_schema)::Test Reducto config generation from schema","test_improve_extraction_rules:115:async ()::Test extraction rule improvement","test_suggest_field_from_description:141:async ()::Test field suggestion from natural language","test_build_schema_generation_prompt:168:()::Test schema generation prompt building"]],"backend/t/test_reducto_service.py":["p",["test_parse_document_success:12:async ()::Test successful document parsing","test_parse_document_file_not_found:48:async ()::Test parsing with non-existent file","test_parse_document_api_error:60:async ()::Test handling Reducto API errors","test_extract_confidence_scores:77:()::Test confidence score extraction from chunks","test_get_confidence_label:99:()::Test confidence label generation","test_extract_field_from_chunks:109:()::Test field extraction from chunks using hints","test_extract_field_from_chunks_not_found:138:()::Test field extraction when hint not found","test_extract_value_after_hint:157:()::Test value extraction after hint"]],"frontend/sr/App.jsx":["j",["App:13:()::"]],"frontend/sr/components/Documents/BulkUpload.jsx":["j",["BulkUpload:5:({ schemaId, onUploadComplete, onError })::","removeFile:29:(index)::","handleUpload:33:async ()::","getProgressColor:94:(status)::","getStatusText:108:(status)::"]],"frontend/sr/components/Documents/DocumentList.jsx":["j",["DocumentList:4:({ refreshTrigger })::","fetchDocuments:14:async ()::","getStatusBadge:31:(status)::","getConfidenceBadge:45:(confidence)::"]],"frontend/sr/components/ExportButton.jsx":["j",["ExportButton:12:({ templateId = null, documentIds = null, variant = 'primary', label = 'Export' })::"]],"frontend/sr/components/ExportModal.jsx":["j",["ExportModal:13:({ isOpen, onClose, templateId = null, documentIds = null })::","fetchTemplate:31:async ()::","fetchSummary:40:async ()::","handleExport:54:async ()::"]],"frontend/sr/components/FieldEditor.jsx":["j",["SortableField:21:({ field, onUpdate, onRemove, depth = 0 })::","FieldEditor:249:({ templateId, templateName, initialFields, onSave, onCancel })::","addNestedField:45:()::","updateNestedField:68:(nestedId, updatedField)::","removeNestedField:82:(nestedId)::","handleDragEnd:269:(event)::","updateField:283:(fieldId, updatedField)::","removeField:288:(fieldId)::","addField:293:()::","handleNaturalLanguagePrompt:307:async ()::","handleSave:344:()::"]],"frontend/sr/components/Layout.jsx":["j",["Layout:6:()::","fetchAuditCount:27:async ()::","handleSearch:46:async (e)::","handleClickOutside:69:(e)::","handleResultClick:79:(result)::"]],"frontend/sr/components/Onboarding/SampleUpload.jsx":["j",["SampleUpload:5:({ onUploadComplete, onError })::","handleUpload:39:async ()::","removeFile:67:(index)::"]],"frontend/sr/components/Onboarding/SchemaBuilder.jsx":["j",["SchemaBuilder:4:({ schema, onSave, onCancel })::","addField:23:(parentPath = null)::","updateField:54:(index, key, value, parentPath = null)::","removeField:82:(index, parentPath = null)::","handleDragStart:99:(e, index)::","handleDragOver:104:(e, index)::","handleDragEnd:117:()::","handlePromptSubmit:121:async ()::","handleSave:145:async ()::","handleImport:169:()::","handleExport:192:()::","handleCopy:206:async ()::","renderField:225:(field, index, parentPath = null)::"]],"frontend/sr/components/Onboarding/SchemaPreview.jsx":["j",["SchemaPreview:3:({ schema, onConfirm, onEdit })::","getConfidenceColor:6:(threshold)::"]],"frontend/sr/components/Onboarding/SchemaPreviewInline.jsx":["j",["SchemaPreviewInline:4:({ schema, onConfirm, onSchemaUpdate, isFromTemplate = false })::","getConfidenceColor:11:(threshold)::","handleFieldPromptSubmit:17:async (fieldIndex)::","handleRemoveField:42:async (fieldIndex)::","toggleFieldEdit:49:(index)::"]],"frontend/sr/components/Onboarding/TemplateLibrary.jsx":["j",["TemplateLibrary:4:({ onSelectTemplate, onSkip })::","fetchTemplates:14:async ()::","handleSelectTemplate:26:async (template)::","handleUseTemplate:30:async ()::","getCategoryColor:46:(category)::"]],"frontend/sr/components/PDFViewer.jsx":["j",["PDFViewer:19:({ fileUrl, page = 1, highlights = [], onPageChange, zoom = 1.0, onZoomChange })::","onDocumentLoadSuccess:32:({ numPages })::","onDocumentLoadError:37:(error)::","BBoxOverlays:191:({ highlights, pageWidth, currentPage })::","handlePrevPage:43:()::","handleNextPage:49:()::","handleZoomIn:55:()::","handleZoomOut:60:()::","handleZoomReset:65:()::"]],"frontend/sr/pages/Analytics.jsx":["j",["Analytics:21:()::","MetricCard:295:({ title, value, subtitle, color })::","fetchAnalytics:33:async ()::"]],"frontend/sr/pages/Audit.jsx":["j",["Audit:7:()::","fetchQueue:52:async ()::","handleVerify:79:async (action, value = null)::","handleCorrect:123:():handleVerify:","handleIncorrect:127:():handleVerify:","handleNotFound:135:():handleVerify:","handleSkip:139:()::","handleKeyPress:145:(e):handleCorrect,handleNotFound,handleSkip:"]],"frontend/sr/pages/BulkConfirmation.jsx":["j",["BulkConfirmation:4:()::","fetchData:19:async ()::","handleCellEdit:49:(docId, fieldName, value)::","getFieldValue:56:(doc, fieldName)::","getFieldConfidence:66:(doc, fieldName)::","getConfidenceColor:71:(confidence)::","handleConfirmAll:78:async ()::"]],"frontend/sr/pages/BulkUpload.jsx":["j",["BulkUpload:7:()::","ProgressDisplay:392:({ progress }):getStageIcon,getStageLabel,map:","DocumentGroupRow:458:({ group, groupIndex, availableTemplates, onTemplateChange, onTemplateNameChange, onTogglePreview })::","fetchTemplates:22:async ()::","handleFileSelect:32:(e)::","handleDrop:37:(e)::","handleUploadAndAnalyze:43:async ():map:","updateGroupTemplate:113:(groupIndex, templateId)::","updateGroupTemplateName:120:(groupIndex, name)::","toggleFieldPreview:126:(groupIndex)::","handleProcessAll:132:async ()::","handleConfirmTemplate:179:async (documentIds, templateId)::","handleCreateNewTemplate:200:async (documentIds, templateName)::","getStageIcon:393:(stage)::","getStageLabel:403:(stage)::","loadTemplateFields:471:async (templateId)::","handleTemplateChange:486:(templateId):loadTemplateFields:","handleTogglePreview:495:():loadTemplateFields:","handleOpenFieldEditor:505:():loadTemplateFields:","handleSaveFields:517:async (fieldData)::"]],"frontend/sr/pages/ChatSearch.jsx":["j",["ChatSearch:6:()::","Message:396:({ message, onViewExtraction })::","scrollToBottom:32:()::","fetchFolderData:36:async ()::","fetchBreadcrumbs:51:async ()::","fetchStats:63:async ()::","handleNavigateToFolder:75:(path)::","handleSubmit:88:async (e)::","handleViewExtraction:144:(extractionId)::"]],"frontend/sr/pages/Documents.jsx":["j",["Documents:5:()::","handleUploadComplete:11:(results)::","handleError:24:(errorMessage)::"]],"frontend/sr/pages/DocumentsDashboard.jsx":["j",["DocumentsDashboard:8:()::","StatCard:433:({ label, value, active, onClick })::","DocumentActions:449:({ doc, navigate, onAssignTemplate })::","fetchTemplates:29:async ()::","fetchDocuments:46:async ()::","getStatusBadge:93:(status, confidence = null, lowestField = null)::","getConfidenceIndicator:151:(confidence, showPercentage = false)::","handleAssignTemplate:510:()::","handleSelectTemplate:194:async (templateId)::","handleSaveFields:203:async (fieldData):fetchDocuments:","handleCloseModal:245:()::","getFilteredDocuments:252:()::","handleExtractData:452:async ()::","handleRetry:479:async ()::","handleView:502:()::","handleVerify:506:()::"]],"frontend/sr/pages/Export.jsx":["j",["Export:8:()::","fetchTemplates:19:async ()::","handleExport:30:(template)::"]],"frontend/sr/pages/FolderView.jsx":["j",["FolderView:6:()::","StatCard:334:({ label, value, color = 'blue' })::","fetchFolderData:25:async ()::","fetchBreadcrumbs:40:async ()::","fetchStats:52:async ()::","handleNavigateToFolder:64:(path)::","handleSearch:70:async (e)::","handleViewExtraction:88:(extractionId)::","getStatusBadge:92:(status)::","getConfidenceBadge:108:(confidence)::"]],"frontend/sr/pages/NaturalLanguageQuery.jsx":["j",["NaturalLanguageQuery:4:()::","scrollToBottom:25:()::","fetchSuggestions:29:async ()::","handleSubmit:38:async (e, suggestedQuery = null)::","handleSuggestionClick:109:(query):handleSubmit:","formatAggregations:114:(aggregations)::"]],"frontend/sr/pages/Onboarding.jsx":["j",["Onboarding:7:()::","handleChoosePath:15:(path)::","handleUploadComplete:20:(result)::","handleTemplateSelected:32:(template)::","handleSkipTemplate:44:()::","handleError:49:(errorMessage)::","handleConfirm:54:async (confirmedSchema)::","handleSchemaUpdate:59:(updatedSchema)::","handleBackToStart:63:()::"]],"frontend/sr/pages/SchemaEditor.jsx":["j",["SchemaEditor:6:()::","fetchSchema:23:async ()::","fetchDocumentCount:40:async ()::","handleSave:53:():performSave:","performSave:63:async (option, triggerReExtraction)::","addField:121:()::","updateField:136:(index, key, value)::","removeField:148:(index)::"]],"frontend/sr/pages/Settings.jsx":["j",["Settings:5:()::","fetchSettings:19:async ()::","handleSettingChange:41:(key, newValue)::","handleSave:47:async (settingKey)::","handleReset:75:async (settingKey):fetchSettings:","renderSettingInput:98:(setting):handleChange,handleSettingChange:","handleChange:117:(displayVal):handleSettingChange:","getSourceBadge:198:(source)::"]],"frontend/sr/pages/Verify.jsx":["j",["Verify:5:()::","fetchDocument:31:async ()::","fetchQueue:55:async ()::","handleVerify:67:async (action, value = null)::","handleSkip:87:()::"]],"test-upload.js":["j",["testUpload:5:async ()::"]],"test_e2e.py":["p",["print_step:15:(step_num, description)::","print_result:20:(success, message)::","test_e2e_flow:24:():print_result,print_step:"]],"test_hybrid_matching.py":["p",["test_elasticsearch_connection:18:async ()::Test Elasticsearch connection and index creation","test_template_signatures_index:39:async ()::Test template signatures index creation","test_template_signature_indexing:67:async ()::Test indexing a template signature","test_template_matching:116:async ()::Test finding similar templates","test_configuration:150:async ()::Test configuration settings","main:166:async ():test_configuration,test_elasticsearch_connection,test_template_matching,test_template_signature_indexing,test_template_signatures_index:Run all tests"]],"test_upload.py":["p",["test_upload:6:()::"]],"verify_system.sh":["s",["check_pass:0:()::Helper functions","check_fail:0:()::","check_warn:0:()::"]]},"g":[["get_setting","get_default_context"],["ReductoService.extract_field_from_chunks","_extract_value_after_hint"],["handleKeyPress","handleNotFound"],["FolderService.get_folder_tree","FolderService._tree_to_list"],["ConfigurationError.__init__","FileUploadError.__init__"],["get_folder_stats","FolderService.get_folder_stats"],["ReductoService.extract_structured","_parse_extraction_with_bbox"],["NotFoundError.__init__","FileUploadError.__init__"],["ElasticsearchMCPService.get_document","DatabaseService.get_document"],["ElasticsearchError.__init__","ElasticsearchError.__init__"],["FolderService._tree_to_list","_tree_to_list"],["handleTemplateChange","loadTemplateFields"],["SchemaError.__init__","ElasticsearchError.__init__"],["ProcessingError.__init__","QueryOptimizerLegacy.__init__"],["cached","wrapper"],["QueryOptimizerLegacy.build_optimized_query","QueryOptimizerLegacy._get_date_range"],["list_templates","seed_builtin_templates"],["FieldNormalizer.normalize_query_fields","_canonicalize_fields"],["ValidationError.__init__","SchemaRegistry.__init__"],["PaperbaseException.__init__","FileUploadError.__init__"],["NotFoundError.__init__","ExtractionService.__init__"],["ClaudeError.__init__","SchemaRegistry.__init__"],["ElasticsearchError.__init__","QueryOptimizer.__init__"],["SchemaError.__init__","QueryOptimizer.__init__"],["modify_schema_with_prompt","modify_schema_with_prompt"],["PaperbaseException.__init__","ExtractionService.__init__"],["handleChange","handleSettingChange"],["FileService.upload_multiple","FileService.upload_file"],["ExtractionService.batch_extract","ExtractionService.create_extraction"],["ReductoError.__init__","__init__"],["ProcessingError.__init__","ClaudeError.__init__"],["get_recent_documents","search_documents"],["get_template_details","get_template_details"],["handleReset","fetchSettings"],["get_recent_documents","get_recent_documents"],["natural_language_query","_format_result"],["ClaudeService.analyze_sample_documents","ClaudeService._build_schema_generation_prompt"],["QueryOptimizerLegacy.understand_query_intent","QueryOptimizer._resolve_field"],["list_extractions","list_extractions"],["list_extractions","ExtractionService.list_extractions"],["ClaudeError.__init__","FileUploadError.__init__"],["SettingsService.set_setting","SettingsService._serialize_value"],["FileUploadError.__init__","FileUploadError.__init__"],["ValidationError.__init__","ExtractionService.__init__"],["FieldNormalizer._expand_canonical_fields","get_field_names"],["handleNotFound","handleVerify"],["ExternalServiceError.__init__","ExtractionService.__init__"],["ExternalServiceError.__init__","FileService.__init__"],["cached","CacheService.set"],["ElasticsearchService.create_index","_get_es_field_type"],["ClaudeError.__init__","ExtractionService.__init__"],["hybrid_match_document","extract_field_names_from_parse"],["ConfigurationError.__init__","__init__"],["ReductoError.__init__","DatabaseService.__init__"],["FileUploadError.__init__","SchemaError.__init__"],["ExternalServiceError.__init__","NotFoundError.__init__"],["QueryOptimizerLegacy.understand_query_intent","QueryOptimizerLegacy._resolve_field"],["ExternalServiceError.__init__","CacheService.__init__"],["NotFoundError.__init__","__init__"],["ReductoService.extract_structured","ReductoService.upload_file"],["get_low_confidence_fields","get_low_confidence_fields"],["ElasticsearchError.__init__","FileUploadError.__init__"],["search_documents","DatabaseService.search_documents"],["SchemaError.__init__","ClaudeService.__init__"],["PaperbaseException.__init__","__init__"],["handleCorrect","handleVerify"],["FieldNormalizer._expand_canonical_fields","FieldNormalizer.get_field_names"],["get_folder_stats","get_folder_stats"],["update_setting","get_default_context"],["SchemaError.__init__","ProcessingError.__init__"],["get_template_stats","get_template_stats"],["ElasticsearchMCPService.get_document","get_document"],["QueryOptimizer.build_optimized_query","QueryOptimizer._get_date_range"],["ElasticsearchError.__init__","SchemaError.__init__"],["SchemaError.__init__","ReductoError.__init__"],["ProcessingError.__init__","ClaudeService.__init__"],["SchemaError.__init__","SchemaError.__init__"],["SchemaRegistry.get_all_templates_context","get_field_context"],["delete_setting","get_default_context"],["ElasticsearchMCPService.get_aggregations","ElasticsearchMCPService.get_aggregations"],["ProcessingError.__init__","ProcessingError.__init__"],["ReductoError.__init__","FieldNormalizer.__init__"],["ReductoService.parse_document","upload_file"],["get_setting","SettingsService.get_setting"],["SchemaError.__init__","ElasticsearchMCPService.__init__"],["ElasticsearchService.get_aggregations","search"],["NotFoundError.__init__","DatabaseService.__init__"],["ProcessingError.__init__","ReductoError.__init__"],["ValidationError.__init__","__init__"],["ElasticsearchService.close","DatabaseService.close"],["get_breadcrumbs","FolderService.get_breadcrumbs"],["ExportService.export_by_template","ExportService.build_export_query"],["ExportService.export_by_template","documents_to_records"],["PaperbaseException.__init__","DatabaseService.__init__"],["ClaudeError.__init__","__init__"],["ProcessingError.__init__","ElasticsearchMCPService.__init__"],["FileUploadError.__init__","__init__"],["ElasticsearchMCPService.close","ElasticsearchService.close"],["QueryOptimizer.understand_query_intent","_extract_date_filters"],["CacheService.get","CacheService.get"],["ElasticsearchMCPService.search_with_context","ElasticsearchMCPService._get_available_fields"],["ExportService.export_by_template","export_to_excel"],["ReductoError.__init__","ElasticsearchError.__init__"],["ElasticsearchError.__init__","ElasticsearchService.__init__"],["SettingsService.initialize_defaults","set_setting"],["ElasticsearchMCPService.get_aggregations","get_aggregations"],["ElasticsearchService.search","ElasticsearchService.search"],["SchemaError.__init__","ElasticsearchService.__init__"],["QueryOptimizer._find_target_field","QueryOptimizer._resolve_field"],["ProcessingError.__init__","ValidationError.__init__"],["ReductoService.parse_document","ReductoService.upload_file"],["ElasticsearchService.close","close"],["ElasticsearchService.find_similar_templates","search"],["ValidationError.__init__","DatabaseService.__init__"],["ReductoError.__init__","QueryOptimizer.__init__"],["ElasticsearchError.__init__","__init__"],["SettingsService.get_all_settings","_deserialize_value"],["ExternalServiceError.__init__","DatabaseService.__init__"],["FolderService.get_folder_tree","_tree_to_list"],["ClaudeError.__init__","DatabaseService.__init__"],["FileUploadError.__init__","ExternalServiceError.__init__"],["QueryOptimizer.understand_query_intent","_extract_numeric_filters"],["delete_setting","delete_setting"],["ProcessingError.__init__","CacheService.__init__"],["ExtractionService.batch_extract","ExtractionService.process_extraction"],["SchemaError.__init__","SettingsService.__init__"],["QueryOptimizer._find_target_field","QueryOptimizerLegacy._resolve_field"],["NotFoundError.__init__","ElasticsearchError.__init__"],["ElasticsearchError.__init__","ExternalServiceError.__init__"],["ConfigurationError.__init__","QueryOptimizer.__init__"],["ExportService.export_by_template","export_to_csv"],["ValidationError.__init__","FieldNormalizer.__init__"],["SchemaError.__init__","ExternalServiceError.__init__"],["PaperbaseException.__init__","ElasticsearchError.__init__"],["ProcessingError.__init__","SettingsService.__init__"],["ExternalServiceError.__init__","FieldNormalizer.__init__"],["FieldNormalizer.normalize_query_fields","FieldNormalizer._canonicalize_fields"],["NotFoundError.__init__","QueryOptimizer.__init__"],["hybrid_match_document","_no_match_result"],["get_folder_tree","get_folder_tree"],["get_audit_stats","get_audit_stats"],["PaperbaseException.__init__","QueryOptimizer.__init__"],["ElasticsearchMCPService.search_with_context","_get_available_fields"],["SettingsService.initialize_defaults","SettingsService.set_setting"],["ReductoError.__init__","FileUploadError.__init__"],["ProcessingError.__init__","ConfigurationError.__init__"],["ElasticsearchMCPService.close","ElasticsearchMCPService.close"],["ValidationError.__init__","ElasticsearchError.__init__"],["ReductoError.__init__","ProcessingError.__init__"],["ExternalServiceError.__init__","ReductoService.__init__"],["QueryOptimizer._find_target_field","_resolve_field"],["ExternalServiceError.__init__","ElasticsearchError.__init__"],["CacheService.set","CacheService._get_cache_for_category"],["ClaudeError.__init__","ElasticsearchError.__init__"],["client","override_get_db"],["initialize_defaults","initialize_defaults"],["ReductoError.__init__","ReductoError.__init__"],["ReductoError.__init__","SchemaError.__init__"],["ExportService.export_by_template","ExportService.export_to_json"],["get_document_by_filename","DatabaseService.search_documents"],["ReductoService.extract_field_from_chunks","ReductoService._extract_value_after_hint"],["ValidationError.__init__","QueryOptimizer.__init__"],["FileUploadError.__init__","ClaudeError.__init__"],["ClaudeError.__init__","QueryOptimizer.__init__"],["SchemaError.__init__","QueryOptimizerLegacy.__init__"],["FileUploadError.__init__","QueryOptimizer.__init__"],["ConfigurationError.__init__","ClaudeService.__init__"],["ElasticsearchMCPService.get_document","ElasticsearchMCPService.get_document"],["initialize_defaults","SettingsService.initialize_defaults"],["list_templates","list_templates"],["SchemaRegistry.get_field_context","SchemaRegistry._get_default_context"],["renderSettingInput","handleChange"],["ElasticsearchService.create_index","ElasticsearchService._get_es_field_type"],["ElasticsearchMCPService.search_with_context","QueryOptimizer.build_optimized_query"],["ConfigurationError.__init__","ProcessingError.__init__"],["NotFoundError.__init__","ClaudeService.__init__"],["FieldNormalizer.initialize","FieldNormalizer._infer_canonical_category"],["FieldNormalizer.get_search_fields_for_category","get_field_names"],["ConfigurationError.__init__","ReductoError.__init__"],["NotFoundError.__init__","ProcessingError.__init__"],["ConfigurationError.__init__","SchemaError.__init__"],["ReductoError.__init__","ElasticsearchService.__init__"],["ElasticsearchError.__init__","ClaudeError.__init__"],["ExternalServiceError.__init__","SchemaRegistry.__init__"],["NotFoundError.__init__","ReductoError.__init__"],["ConfigurationError.__init__","ElasticsearchMCPService.__init__"],["SchemaError.__init__","ClaudeError.__init__"],["PaperbaseException.__init__","ProcessingError.__init__"],["NotFoundError.__init__","SchemaError.__init__"],["search_documents","_add_folder_filter"],["PaperbaseException.__init__","ReductoError.__init__"],["PaperbaseException.__init__","SchemaError.__init__"],["ExportService.export_by_template","ExportService.documents_to_records"],["ReductoService.extract_structured","upload_file"],["FieldNormalizer.get_search_fields_for_category","FieldNormalizer.get_field_names"],["ConfigurationError.__init__","ValidationError.__init__"],["ValidationError.__init__","FileUploadError.__init__"],["ExternalServiceError.__init__","FileUploadError.__init__"],["ValidationError.__init__","ProcessingError.__init__"],["ConfigurationError.__init__","ElasticsearchService.__init__"],["organize_document_file","get_template_folder"],["ElasticsearchMCPService.search_with_context","QueryOptimizerLegacy.build_optimized_query"],["FileUploadError.__init__","ClaudeService.__init__"],["SchemaError.__init__","PaperbaseException.__init__"],["handleSuggestionClick","handleSubmit"],["ClaudeError.__init__","ProcessingError.__init__"],["ValidationError.__init__","ReductoError.__init__"],["NotFoundError.__init__","ElasticsearchService.__init__"],["ValidationError.__init__","SchemaError.__init__"],["FileUploadError.__init__","ProcessingError.__init__"],["SchemaRegistry.get_canonical_field_mapping","_get_canonical_name"],["search_documents","search_documents"],["main","test_template_signatures_index"],["ProcessingError.__init__","ReductoService.__init__"],["ReductoService.parse_document","FileService.upload_file"],["ClaudeError.__init__","ReductoError.__init__"],["ReductoError.__init__","ExternalServiceError.__init__"],["ExportService.export_by_template","build_export_query"],["ClaudeError.__init__","SchemaError.__init__"],["handleTogglePreview","loadTemplateFields"],["FileUploadError.__init__","ReductoError.__init__"],["ProcessingError.__init__","PaperbaseException.__init__"],["PaperbaseException.__init__","ElasticsearchService.__init__"],["get_audit_stats","DatabaseService.get_audit_queue"],["FileUploadError.__init__","ElasticsearchMCPService.__init__"],["batch_extract","ExtractionService.batch_extract"],["ElasticsearchError.__init__","ClaudeService.__init__"],["ConfigurationError.__init__","SettingsService.__init__"],["ElasticsearchError.__init__","ProcessingError.__init__"],["main","test_template_signature_indexing"],["main","test_elasticsearch_connection"],["NotFoundError.__init__","SettingsService.__init__"],["ElasticsearchError.__init__","ReductoError.__init__"],["ValidationError.__init__","ElasticsearchService.__init__"],["ConfigurationError.__init__","ExternalServiceError.__init__"],["FileUploadError.__init__","ValidationError.__init__"],["test_e2e_flow","print_result"],["ProgressDisplay","getStageIcon"],["get_all_settings","SettingsService.get_all_settings"],["ElasticsearchError.__init__","ElasticsearchMCPService.__init__"],["PaperbaseException.__init__","SettingsService.__init__"],["ClaudeError.__init__","ElasticsearchService.__init__"],["NotFoundError.__init__","ExternalServiceError.__init__"],["FileUploadError.__init__","ElasticsearchService.__init__"],["ConfigurationError.__init__","ConfigurationError.__init__"],["ProcessingError.__init__","SchemaRegistry.__init__"],["handleIncorrect","handleVerify"],["CacheService.get","_get_cache_for_category"],["SchemaRegistry.get_field_context","SchemaRegistry._generate_aliases"],["PaperbaseException.__init__","ExternalServiceError.__init__"],["FieldNormalizer.initialize","_infer_canonical_category"],["ExternalServiceError.__init__","__init__"],["ElasticsearchMCPService.close","DatabaseService.close"],["ReductoError.__init__","QueryOptimizerLegacy.__init__"],["CacheService.delete","_get_cache_for_category"],["QueryOptimizerLegacy.understand_query_intent","_resolve_field"],["ElasticsearchError.__init__","ValidationError.__init__"],["FieldNormalizer.normalize_query_fields","_expand_canonical_fields"],["SchemaError.__init__","ValidationError.__init__"],["SchemaRegistry.get_canonical_field_mapping","SchemaRegistry._get_canonical_name"],["SchemaError.__init__","ExtractionService.__init__"],["SchemaError.__init__","FileService.__init__"],["ClaudeError.__init__","SettingsService.__init__"],["FileUploadError.__init__","SettingsService.__init__"],["get_audit_queue","DatabaseService.get_audit_queue"],["ValidationError.__init__","ExternalServiceError.__init__"],["ReductoError.__init__","ClaudeError.__init__"],["ElasticsearchError.__init__","CacheService.__init__"],["natural_language_query","_handle_aggregation_query"],["SchemaError.__init__","NotFoundError.__init__"],["natural_language_query","_hash_query"],["ProcessingError.__init__","ExtractionService.__init__"],["SchemaError.__init__","CacheService.__init__"],["ElasticsearchMCPService.close","close"],["ClaudeError.__init__","ExternalServiceError.__init__"],["ProcessingError.__init__","FileService.__init__"],["ConfigurationError.__init__","QueryOptimizerLegacy.__init__"],["main","test_configuration"],["ReductoService.parse_document","ReductoService._extract_confidence_scores"],["ReductoService.extract_structured","ReductoService._parse_extraction_with_bbox"],["NotFoundError.__init__","QueryOptimizerLegacy.__init__"],["QueryOptimizer._extract_numeric_filters","_find_target_field"],["ClaudeService.analyze_sample_documents","_build_schema_generation_prompt"],["ProcessingError.__init__","NotFoundError.__init__"],["get_template_document_count","get_template_folder"],["FileUploadError.__init__","ConfigurationError.__init__"],["ElasticsearchError.__init__","SettingsService.__init__"],["PaperbaseException.__init__","QueryOptimizerLegacy.__init__"],["ConfigurationError.__init__","ClaudeError.__init__"],["ElasticsearchMCPService.get_document","ElasticsearchService.get_document"],["SchemaRegistry.get_field_context","_get_standard_field_type"],["QueryOptimizerLegacy.build_optimized_query","QueryOptimizer._get_date_range"],["CacheService.clear","CacheService.clear"],["get_document_by_filename","get_document_by_filename"],["CacheService.set","_get_cache_for_category"],["NotFoundError.__init__","ClaudeError.__init__"],["SettingsService.get_setting","SettingsService._deserialize_value"],["ElasticsearchError.__init__","ConfigurationError.__init__"],["SchemaError.__init__","ConfigurationError.__init__"],["PaperbaseException.__init__","ClaudeError.__init__"],["ValidationError.__init__","QueryOptimizerLegacy.__init__"],["get_document_by_filename","search_documents"],["SchemaRegistry.get_field_context","SchemaRegistry._get_standard_field_description"],["ClaudeError.__init__","QueryOptimizerLegacy.__init__"],["ReductoError.__init__","ClaudeService.__init__"],["FileUploadError.__init__","QueryOptimizerLegacy.__init__"],["ConfigurationError.__init__","PaperbaseException.__init__"],["batch_extract","batch_extract"],["NotFoundError.__init__","PaperbaseException.__init__"],["ValidationError.__init__","ClaudeError.__init__"],["get_extraction_stats","get_extraction_stats"],["QueryOptimizer.build_optimized_query","_get_date_range"],["SchemaError.__init__","DatabaseService.__init__"],["ReductoError.__init__","ElasticsearchMCPService.__init__"],["PaperbaseException.__init__","PaperbaseException.__init__"],["ExportService.export_by_template","ExportService.export_to_csv"],["get_verification_history","get_verification_history"],["ClaudeError.__init__","ClaudeError.__init__"],["ExternalServiceError.__init__","QueryOptimizer.__init__"],["ElasticsearchMCPService.get_aggregations","ElasticsearchService.get_aggregations"],["ElasticsearchError.__init__","QueryOptimizerLegacy.__init__"],["ReductoService.extract_structured","parse_document"],["ReductoService.extract_structured","FileService.upload_file"],["FieldNormalizer.get_canonical_name","FieldNormalizer._infer_canonical_category"],["SchemaRegistry.get_field_context","_get_default_context"],["ProcessingError.__init__","DatabaseService.__init__"],["CacheService.clear","CacheService._get_cache_for_category"],["ElasticsearchService.get_aggregations","ElasticsearchService.search"],["get_folder_tree","FolderService.get_folder_tree"],["ElasticsearchService.index_document","_build_canonical_fields"],["get_all_settings","get_default_context"],["ReductoError.__init__","ValidationError.__init__"],["natural_language_query","_generate_suggested_actions"],["get_setting","get_setting"],["PaperbaseException.__init__","ClaudeService.__init__"],["ReductoError.__init__","FileService.__init__"],["ClaudeError.__init__","PaperbaseException.__init__"],["SchemaError.__init__","FieldNormalizer.__init__"],["FileUploadError.__init__","PaperbaseException.__init__"],["ReductoError.__init__","NotFoundError.__init__"],["get_all_settings","get_all_settings"],["NotFoundError.__init__","ElasticsearchMCPService.__init__"],["SchemaRegistry.get_field_context","SchemaRegistry._generate_typical_queries"],["ReductoError.__init__","CacheService.__init__"],["ElasticsearchMCPService.health_check","ElasticsearchService.health_check"],["get_settings_by_category","SettingsService.get_all_settings"],["SchemaRegistry.get_field_context","_get_standard_field_description"],["ProcessingError.__init__","FieldNormalizer.__init__"],["ElasticsearchService.search","search"],["PaperbaseException.__init__","ElasticsearchMCPService.__init__"],["handleSave","performSave"],["ElasticsearchService.find_similar_templates","ElasticsearchService.search"],["handleUploadAndAnalyze","map"],["ElasticsearchError.__init__","ReductoService.__init__"],["ValidationError.__init__","ClaudeService.__init__"],["SchemaError.__init__","ReductoService.__init__"],["ReductoService.parse_document","_extract_confidence_scores"],["cached","decorator"],["ExternalServiceError.__init__","ClaudeService.__init__"],["ConfigurationError.__init__","ExtractionService.__init__"],["ConfigurationError.__init__","FileService.__init__"],["NotFoundError.__init__","ValidationError.__init__"],["ClaudeError.__init__","ClaudeService.__init__"],["ElasticsearchError.__init__","PaperbaseException.__init__"],["ReductoError.__init__","SettingsService.__init__"],["ExternalServiceError.__init__","ProcessingError.__init__"],["get_processing_timeline","get_processing_timeline"],["NotFoundError.__init__","FileService.__init__"],["get_audit_stats","get_audit_queue"],["PaperbaseException.__init__","ValidationError.__init__"],["ConfigurationError.__init__","NotFoundError.__init__"],["ExternalServiceError.__init__","ReductoError.__init__"],["ConfigurationError.__init__","CacheService.__init__"],["ProcessingError.__init__","ElasticsearchError.__init__"],["ExternalServiceError.__init__","SchemaError.__init__"],["FileUploadError.__init__","SchemaRegistry.__init__"],["cached","CacheService.make_key"],["ValidationError.__init__","ElasticsearchMCPService.__init__"],["FieldNormalizer.get_aggregation_field","get_field_names"],["PaperbaseException.__init__","FileService.__init__"],["NotFoundError.__init__","NotFoundError.__init__"],["cached","DatabaseService.get_all_templates"],["ExternalServiceError.__init__","ElasticsearchMCPService.__init__"],["NotFoundError.__init__","CacheService.__init__"],["delete_setting","SettingsService.delete_setting"],["ClaudeError.__init__","ElasticsearchMCPService.__init__"],["QueryOptimizerLegacy.build_optimized_query","_get_date_range"],["ElasticsearchMCPService.search_with_context","build_optimized_query"],["ReductoError.__init__","ConfigurationError.__init__"],["get_breadcrumbs","get_breadcrumbs"],["main","test_template_matching"],["PaperbaseException.__init__","NotFoundError.__init__"],["ProcessingError.__init__","QueryOptimizer.__init__"],["FieldNormalizer.build_canonical_document","get_canonical_name"],["PaperbaseException.__init__","CacheService.__init__"],["ExtractionService.batch_extract","create_extraction"],["cached","cached"],["ValidationError.__init__","ValidationError.__init__"],["ElasticsearchError.__init__","SchemaRegistry.__init__"],["ElasticsearchMCPService.health_check","health_check"],["ExternalServiceError.__init__","ValidationError.__init__"],["handleKeyPress","handleCorrect"],["SchemaError.__init__","SchemaRegistry.__init__"],["ClaudeError.__init__","ValidationError.__init__"],["ValidationError.__init__","FileService.__init__"],["ElasticsearchMCPService.search_with_context","QueryOptimizer.understand_query_intent"],["FieldNormalizer.get_aggregation_field","FieldNormalizer.get_field_names"],["get_recent_documents","DatabaseService.search_documents"],["ExternalServiceError.__init__","ElasticsearchService.__init__"],["SchemaRegistry.get_all_templates_context","SchemaRegistry.get_field_context"],["ClaudeError.__init__","FileService.__init__"],["QueryOptimizer.understand_query_intent","QueryOptimizer._extract_date_filters"],["QueryOptimizer.understand_query_intent","QueryOptimizer._extract_text_filters"],["FieldNormalizer.get_canonical_name","_infer_canonical_category"],["ElasticsearchService.index_document","ElasticsearchService._build_canonical_fields"],["FileUploadError.__init__","ExtractionService.__init__"],["ValidationError.__init__","NotFoundError.__init__"],["FileUploadError.__init__","FileService.__init__"],["ValidationError.__init__","CacheService.__init__"],["FileService.upload_multiple","upload_file"],["ClaudeError.__init__","NotFoundError.__init__"],["NotFoundError.__init__","ConfigurationError.__init__"],["ClaudeError.__init__","CacheService.__init__"],["FileUploadError.__init__","NotFoundError.__init__"],["cached","make_key"],["FileUploadError.__init__","CacheService.__init__"],["ProgressDisplay","getStageLabel"],["cached","get_all_templates"],["SchemaError.__init__","FileUploadError.__init__"],["search_in_folder","FolderService.search_in_folder"],["FieldNormalizer.build_canonical_document","FieldNormalizer.get_canonical_name"],["QueryOptimizer.understand_query_intent","QueryOptimizer._extract_numeric_filters"],["PaperbaseException.__init__","ConfigurationError.__init__"],["FolderService._tree_to_list","FolderService._tree_to_list"],["get_audit_queue","get_audit_queue"],["FieldNormalizer.normalize_query_fields","FieldNormalizer._expand_canonical_fields"],["ElasticsearchError.__init__","ExtractionService.__init__"],["ValidationError.__init__","SettingsService.__init__"],["ElasticsearchError.__init__","FileService.__init__"],["ExternalServiceError.__init__","SettingsService.__init__"],["search_in_folder","search_in_folder"],["ProcessingError.__init__","FileUploadError.__init__"],["FieldNormalizer._expand_canonical_fields","_expand_canonical_fields"],["ProgressDisplay","map"],["ConfigurationError.__init__","DatabaseService.__init__"],["FieldNormalizer._expand_canonical_fields","FieldNormalizer._expand_canonical_fields"],["ElasticsearchError.__init__","NotFoundError.__init__"],["ExternalServiceError.__init__","ExternalServiceError.__init__"],["CacheService.get","get"],["SettingsService.set_setting","_serialize_value"],["FileService.upload_multiple","ReductoService.upload_file"],["QueryOptimizer._extract_numeric_filters","QueryOptimizer._find_target_field"],["ValidationError.__init__","ConfigurationError.__init__"],["ProcessingError.__init__","SchemaError.__init__"],["ExportService.export_by_template","export_to_json"],["ElasticsearchMCPService.search_with_context","understand_query_intent"],["ExternalServiceError.__init__","ConfigurationError.__init__"],["compare_templates_prompt","compare_templates_prompt"],["ClaudeError.__init__","ConfigurationError.__init__"],["ElasticsearchService.close","ElasticsearchService.close"],["ReductoError.__init__","ReductoService.__init__"],["get_confidence_distribution","get_confidence_distribution"],["QueryOptimizer.understand_query_intent","_extract_text_filters"],["migrate_documents_to_extractions","infer_template_from_schema"],["ConfigurationError.__init__","FieldNormalizer.__init__"],["ReductoError.__init__","PaperbaseException.__init__"],["get_settings_by_category","get_default_context"],["ExtractionService.batch_extract","process_extraction"],["CacheService.get","CacheService._get_cache_for_category"],["get_export_summary","get_export_summary"],["NotFoundError.__init__","FieldNormalizer.__init__"],["SettingsService.get_all_settings","SettingsService._deserialize_value"],["CacheService.delete","CacheService._get_cache_for_category"],["CacheService._get_cache_for_category","get"],["ExportService.export_by_template","ExportService.export_to_excel"],["ProcessingError.__init__","ElasticsearchService.__init__"],["handleOpenFieldEditor","loadTemplateFields"],["SchemaError.__init__","__init__"],["SettingsService.get_setting","_deserialize_value"],["PaperbaseException.__init__","FieldNormalizer.__init__"],["compare_templates","compare_templates"],["FileUploadError.__init__","DatabaseService.__init__"],["cached","set"],["test_e2e_flow","print_step"],["get_settings_by_category","get_all_settings"],["ExternalServiceError.__init__","QueryOptimizerLegacy.__init__"],["QueryOptimizer.build_optimized_query","QueryOptimizerLegacy._get_date_range"],["ConfigurationError.__init__","ReductoService.__init__"],["ConfigurationError.__init__","ElasticsearchError.__init__"],["ProcessingError.__init__","__init__"],["CacheService._get_cache_for_category","CacheService.get"],["NotFoundError.__init__","ReductoService.__init__"],["CacheService.clear","_get_cache_for_category"],["ElasticsearchMCPService.health_check","ElasticsearchMCPService.health_check"],["SchemaRegistry.get_field_context","_generate_aliases"],["ReductoError.__init__","SchemaRegistry.__init__"],["cached","get"],["PaperbaseException.__init__","ReductoService.__init__"],["ElasticsearchError.__init__","DatabaseService.__init__"],["SchemaRegistry.get_field_context","SchemaRegistry._get_standard_field_type"],["handleKeyPress","handleSkip"],["get_low_confidence_fields","get_audit_queue"],["auto_match_documents","hybrid_match_document"],["ExternalServiceError.__init__","ClaudeError.__init__"],["get_export_summary","ExportService.get_export_summary"],["seed_templates","seed_builtin_templates"],["ElasticsearchMCPService.search_with_context","QueryOptimizerLegacy.understand_query_intent"],["ClaudeError.__init__","FieldNormalizer.__init__"],["FileUploadError.__init__","FieldNormalizer.__init__"],["get_field_accuracy_report","get_field_accuracy_report"],["get_low_confidence_fields","DatabaseService.get_audit_queue"],["ProcessingError.__init__","ExternalServiceError.__init__"],["get_extraction_stats","ExtractionService.get_extraction_stats"],["cached","CacheService.get"],["migrate_documents_to_extractions","generate_organized_path"],["SchemaRegistry.get_field_context","_generate_typical_queries"],["ElasticsearchService.close","ElasticsearchMCPService.close"],["renderSettingInput","handleSettingChange"],["ValidationError.__init__","ReductoService.__init__"],["ConfigurationError.__init__","SchemaRegistry.__init__"],["CacheService.clear","clear"],["ClaudeError.__init__","ReductoService.__init__"],["ValidationError.__init__","PaperbaseException.__init__"],["ReductoError.__init__","ExtractionService.__init__"],["NotFoundError.__init__","SchemaRegistry.__init__"],["FileUploadError.__init__","ReductoService.__init__"],["ElasticsearchError.__init__","FieldNormalizer.__init__"],["ExternalServiceError.__init__","PaperbaseException.__init__"],["FileUploadError.__init__","ElasticsearchError.__init__"],["get_document_details","get_document_details"],["handleSaveFields","fetchDocuments"],["ReductoService.extract_structured","ReductoService.parse_document"],["PaperbaseException.__init__","SchemaRegistry.__init__"]],"d":{"API_DOCUMENTATION.md":["Paperbase API Documentation","\ud83d\udccb Table of Contents","\ud83d\udd10 Authentication","\ud83c\udfe5 Health Check","GET /health","\ud83d\udcd1 Templates","GET /api/templates/","GET /api/templates/{template_id}","GET /api/templates/category/{category}","POST /api/templates/{template_id}/use"],"AUDIT_TAB_IMPLEMENTATION.md":["Audit Tab Implementation Summary","Overview","Implementation Date","What Was Built","Backend Changes","Frontend Changes","User Workflow","Entry Points","Review Flow","Technical Details"],"AUDIT_UX_IMPROVEMENTS.md":["Audit UX Improvements","Changes Made (2025-10-13)","Issue 1: Better handling of 0% confidence","Issue 2: Clarify when bbox highlighting is unavailable","Updated Files","1. Audit Page ([frontend/src/pages/Audit.jsx](frontend/src/pages/Audit.jsx))","2. Documents Dashboard ([frontend/src/pages/DocumentsDashboard.jsx](frontend/src/pages/DocumentsDashboard.jsx))","Visual Changes","Audit Page - Confidence Display","Audit Page - Missing Bbox Warning"],"CHAT_FOLDER_SEARCH.md":["Chat + Folder Integrated Search - Implementation Complete","\ud83c\udf89 What Was Built","\ud83d\udccd Architecture","Page Layout","\ud83d\ude80 Key Features","1. **Integrated Folder Navigation**","2. **Context-Aware Chat**","3. **Smart Search Scoping**","4. **Interactive Results**","5. **Folder Statistics**"],"CLAUDE.md":["Paperbase - MVP","Project Overview","Latest Update: Multi-Template Extraction (2025-10-11)","Core Value Proposition (NEW)","Tech Stack","Architecture Pattern","Key Design Decisions","Cost Optimization Strategy","Confidence Scores","Schema-Driven Extraction"],"DEPLOYMENT_CHECKLIST.md":["Multi-Template Extraction - Deployment Checklist","\ud83d\ude80 Pre-Deployment","1. Backup Current System","2. Verify Requirements","3. Code Verification","\ud83d\udd04 Migration Process","Step 1: Create Tables","Step 2: Dry Run Migration","Step 3: Run Migration","Step 4: Verify Migration"],"EXPORT_FEATURE.md":["Export Feature Documentation","Overview","Features","1. Multiple Export Formats","2. Flexible Filtering","3. Data Formats","4. Metadata Options","API Endpoints","List Exportable Templates","Export by Template (Simple)"],"EXPORT_IMPLEMENTATION_SUMMARY.md":["Export Feature Implementation Summary","\u2705 What's Been Built","Backend Implementation","Frontend Implementation","\ud83d\udccb Feature Matrix","\ud83d\ude80 How to Use","For End Users","For Developers","Simple template export","With filters"],"FOLDER_VIEW_UPDATE.md":["Folder View Implementation - Summary","What Was Done","1. Multi-Template Extraction Backend (Previously Completed)","2. New Folder View Frontend (Just Completed)","3. Updated Routing","User Experience","Default Documents View (New)","Folder Navigation","Search Experience","API Integration"],"HYBRID_MATCHING_IMPLEMENTATION.md":["Hybrid Template Matching Implementation","Overview","Key Benefits","Architecture","Implementation Details","1. Configuration (`backend/app/core/config.py`)","If ES confidence < 0.70, use Claude","Can disable Claude entirely for cost control","2. Elasticsearch Service (`backend/app/services/elastic_service.py`)","3. Template Matching Utility (`backend/app/utils/template_matching.py`)"],"IMPLEMENTATION_COMPLETE.md":["Paperbase Implementation Complete \u2705","\ud83c\udf89 What Was Accomplished","Major Features Implemented","Bug Fixes Applied","\ud83d\udcca Current System State","Services Status","Data Statistics","Test Results","\ud83d\ude80 Pipeline Optimization Results","Performance Metrics"],"MCP_IMPLEMENTATION_SUMMARY.md":["Paperbase MCP Server - Implementation Summary","\ud83c\udf89 Implementation Complete","\ud83d\udce6 What Was Built","**Core Architecture**","\ud83d\udee0\ufe0f Features Implemented","**1. Intelligent Query Optimization**","**2. Multi-Tier Caching**","**3. MCP Tools (11 Total)**","**4. MCP Resources (6 Total)**","**5. MCP Prompts (3 Total)**"],"MCP_QUICK_START.md":["Paperbase MCP Server - Quick Start","\ud83d\ude80 5-Minute Setup","1. Install Dependencies","2. Configure Claude Desktop","3. Test","Should see: \"MCP server ready\"","4. Restart Claude Desktop","\ud83d\udcac Try These Queries","\ud83d\udee0\ufe0f Available Tools","\ud83d\udcda Resources (Read-Only)"],"MULTI_TEMPLATE_EXTRACTION.md":["Multi-Template Extraction Implementation","Overview","Architecture Changes","Database Schema","Key Concepts","Same file uploaded twice \u2192 only stored once","Folder path is metadata only - no physical file copying","Example: \"Invoice/2025-10-11/contract.pdf\"","First extraction: parse document","Subsequent extractions: reuse parse result"],"MULTI_TEMPLATE_QUICKSTART.md":["Multi-Template Extraction - Quick Start Guide","\ud83d\ude80 Getting Started","Prerequisites","Quick Setup","1. Backup your database","2. Run migration","3. Verify migration","\ud83d\udcd6 Common Use Cases","Use Case 1: Upload File and Try Multiple Templates","Upload and extract with 2 templates"],"MULTI_TEMPLATE_READY.md":["\ud83c\udf89 Multi-Template Extraction - Ready to Deploy!","What's New?","\u2728 Key Features","\ud83d\udcda Documentation Index","\ud83d\ude80 Quick Start (3 Steps)","Step 1: Backup & Migrate","Backup database","Run migration","Step 2: Test New Endpoints","Test extraction with multiple templates"],"NEW_ARCHITECTURE.md":["New Paperbase Architecture - Option A Implementation","Overview","Key Changes from Original Design","1. **Bulk Upload First** (New Entry Point)","2. **Auto-Template Matching**","3. **Bulk Confirmation UI**","4. **Document Status Dashboard**","5. **Natural Language Search**","New API Endpoints","Bulk Upload Flow"],"NL_QUERY_GUIDE.md":["Natural Language Query Interface - User Guide","\ud83c\udfaf Overview","\ud83d\ude80 Getting Started","Accessing the Interface","Example Questions","\ud83d\udca1 Tips for Better Results","1. Be Specific with Amounts","2. Use Relative Dates","3. Leverage Fuzzy Matching","4. Ask for Aggregations"],"NL_QUERY_IMPLEMENTATION.md":["Natural Language Query Implementation Summary","\u2705 What Was Built","\ud83c\udfd7\ufe0f Architecture","Backend Components","Frontend Components","\ud83c\udfaf Key Features","1. Smart Date Parsing","2. Fuzzy Matching","3. Compound Queries","4. Aggregations"],"NL_QUERY_SUMMARY.md":["Natural Language Query Interface - Summary","\u2705 Implementation Complete","\ud83c\udfaf What You Asked For","\ud83d\udcc1 Files Created","Backend (4 files)","Frontend (3 files)","Documentation (3 files)","\ud83d\ude80 Quick Start","Terminal 1: Start backend","Terminal 2: Start frontend"],"NL_SEARCH_IMPLEMENTATION_COMPLETE.md":["Natural Language Search Optimization - Implementation Complete \u2705","Executive Summary","Key Achievements","\ud83d\ude80 Performance Improvements","\ud83d\udca1 Key Innovations","What Was Built","Phase 1: QueryOptimizer Integration \u2705","confidence: 0.85 \u2192 Direct execution (no Claude call)","Phase 2: Field Normalization \u2705","User queries: \"amount > 1000\""],"NL_SEARCH_OPTIMIZATION.md":["Natural Language Search Optimization - Implementation Summary","Overview","Architecture Changes","Before: Simple Claude-Only Approach","After: Hybrid Optimization Approach","Phase 1: QueryOptimizer Integration \u2705","What Was Built","Returns:","{","\"intent\": \"retrieve\","],"NL_SEARCH_QUICK_START.md":["Natural Language Search - Quick Start Guide","Overview","For Users: How to Search","Basic Search","Range Filters","Date Filters","Combined Filters","Status Filters","Cross-Template Queries (NEW!)","For Developers: Integration Guide"],"PIPELINE_IMPLEMENTATION_SUMMARY.md":["Reducto Pipeline Implementation Summary","\u2705 What Was Implemented","1. **Reducto Pipelining with `jobid://`**","2. **Parse Result Caching**","3. **Template-Based File Organization**","4. **Optimized Bulk Upload Flow**","5. **Pipelined Document Processing**","\ud83d\udcca Performance & Cost Improvements","Before Pipeline","After Pipeline"],"PROJECT_PLAN.md":["Project Implementation Plan","MVP Scope","In Scope \u2705","Out of Scope \u274c","Phase 1: Foundation & Setup","TODO 1.1: Project Initialization","TODO 1.2: Backend Foundation","Start backend","Test health endpoint","Check API docs"],"QUICK_START.md":["Paperbase Quick Start Guide","What's New? \ud83c\udf89","Getting Started in 3 Minutes","1. Start the Application","Start all services","Or run separately:","Backend","Frontend","2. Upload Documents","3. Confirm Templates"],"QUICK_TEST.md":["Quick Test Guide - Natural Language Query Interface","\ud83d\ude80 Quick Start","1. Start the Backend","2. Start the Frontend","3. Access the Interface","\ud83e\uddea Test Queries","Basic Functionality Tests","Date Parsing Tests","Aggregation Tests","Compound Query Tests"],"README.md":["Paperbase \ud83d\ude80","\u26a1 Quick Start (3 minutes)","1. Install Prerequisites","2. Setup","Clone and configure","Add your API keys to .env","Start services (Option 1: Docker)","OR (Option 2: Local dev)","Terminal 1: Start Elasticsearch","Terminal 2: Start backend"],"SETTINGS_CONSOLIDATION.md":["Settings Consolidation - Complete \u2705","Summary","What Changed","Before (Confusing)","After (Clear)","Changes Made","1. Settings Model ([backend/app/models/settings.py](backend/app/models/settings.py))","2. Backend Code Updates","3. Migration Script","Dry run (see what would change)"],"SETTINGS_IMPLEMENTATION.md":["Settings & Configuration System Implementation","Summary","What Changed","1. \u2705 Audit vs Verify Consolidation","2. \u2705 Hierarchical Settings System","3. \u2705 Configurable Thresholds","4. \u2705 Dynamic Threshold Usage","Database Changes","API Endpoints","Settings Management"],"SMART_INDEXING_GUIDE.md":["Smart Indexing for Smart Querying - Implementation Guide","Overview","Key Innovation","What Changed","1. **Schema Registry Service** (`app/services/schema_registry.py`)","Returns:","{","\"template_name\": \"Invoices\",","\"fields\": {","\"invoice_total\": {"],"SMART_INDEXING_SUMMARY.md":["Smart Indexing Implementation Summary","What We Built","Core Innovation","Files Created","Files Modified","Key Features","1. **Schema Registry**","Get rich field context","Returns aliases, descriptions, hints, typical queries","Claude uses this to generate accurate ES queries"],"SYSTEM_STATUS.md":["Paperbase System Status Report","\u2705 System Health","Services Running","Recent Fixes (2025-10-10)","\ud83d\udcca Current Data Status","Documents by Status","Templates Available","Schemas Created","File Organization","\ud83d\ude80 Pipeline Optimization Status"],"TESTING_GUIDE.md":["Paperbase Testing Guide","\ud83d\ude80 Prerequisites","1. Start All Services","Terminal 1: Start Elasticsearch (if not using Docker)","Terminal 2: Start Backend","Terminal 3: Start Frontend","2. Verify Services Running","Check backend","Check frontend","Check Elasticsearch"],"TROUBLESHOOTING.md":["Paperbase Troubleshooting Guide","\ud83d\udd0d Quick Diagnostics","Check System Health","Backend health","Frontend accessible","Elasticsearch running","Database exists","Check running processes","\ud83d\udea8 Common Issues","1. Backend Won't Start"],"VERIFICATION_CHECKLIST.md":["Verification Checklist - Paperbase v2.0","\u2705 Files Created/Updated","Backend - New Files","Backend - Updated Files","Frontend - New Files","Frontend - Updated Files","Documentation - New Files","Documentation - Updated Files","\ud83d\udd27 Code Quality Checks","Python Syntax"],"docs/API.md":["Paperbase API Documentation","Table of Contents","Authentication","Onboarding Endpoints","POST /api/onboarding/analyze-samples","GET /api/onboarding/schema","PUT /api/onboarding/schema","Document Endpoints","POST /api/documents/upload","POST /api/documents/process"],"docs/DEPLOYMENT.md":["Paperbase Deployment Guide","Table of Contents","Prerequisites","Required Software","API Keys","Development Deployment","Quick Start","Development Workflow","Create virtual environment","Install dependencies"],"docs/MCP_ARCHITECTURE.md":["Paperbase MCP Server - Architecture Overview","System Architecture","Query Flow Example","User Query: \"Show me invoices over $1000 from last week\"","Integration with Existing Paperbase","Shared Components","Database Models (from app/models/)","Services (wrapped for MCP)","Configuration (shared)","MCP-Specific Components"],"docs/MCP_SETUP.md":["Paperbase MCP Server Setup Guide","Overview","Features","Tools (User Actions)","Resources (Read-Only Data)","Prompts (Workflow Templates)","Installation","1. Install Dependencies","2. Configure Environment","3. Test the MCP Server"],"docs/PIPELINE_OPTIMIZATION.md":["Reducto Pipeline Optimization","Overview","What is Pipelining?","Before (Inefficient)","After (Pipelined)","Architecture Changes","1. Document Model Updates","2. Reducto Service Updates","3. Workflow Updates","Folder Organization"],"docs/USER_GUIDE.md":["Paperbase User Guide","Table of Contents","Getting Started","What is Paperbase?","First Time Setup","Onboarding: Creating Your Schema","Step 1: Prepare Sample Documents","Step 2: Upload Samples","Step 3: Review Generated Schema","Step 4: Edit Schema (Optional)"],"test_documents/README.md":["Test Documents","Purpose","Document Types","Invoices","Contracts","Receipts","Adding Test Documents","Generating Fake Documents","Testing Workflow","1. Schema Generation Test"]},"deps":{"backend/app/api/analytics.py":["fastapi","sqlalchemy.orm","sqlalchemy","app.core.database","app.models.document","app.models.schema","app.models.verification","datetime","logging"],"backend/app/api/audit.py":["fastapi","sqlalchemy.orm","sqlalchemy","typing","app.core.database","app.core.config","app.models.document","app.models.verification","app.services.elastic_service","app.services.settings_service","datetime","pydantic","logging"],"backend/app/api/bulk_upload.py":["fastapi","sqlalchemy.orm","typing","pydantic","app.core.database","app.core.config","app.models.document","app.models.schema","app.models.template","app.services.reducto_service","app.services.claude_service","app.services.elastic_service","app.utils.file_organization","app.utils.template_matching","logging","os","datetime","app.api.documents","app.api.documents","app.utils.template_matching","app.models.verification","app.services.elastic_service"],"backend/app/api/documents.py":["fastapi","sqlalchemy.orm","typing","app.core.database","app.core.config","app.models.schema","app.models.template","app.models.document","app.services.reducto_service","app.services.elastic_service","logging","os","datetime","app.core.database"],"backend/app/api/export.py":["fastapi","fastapi.responses","sqlalchemy.orm","typing","datetime","pydantic","io","logging","app.core.database","app.services.export_service","app.models.template","app.models.document","sqlalchemy"],"backend/app/api/extractions.py":["typing","fastapi","sqlalchemy.orm","pydantic","app.core.database","app.services.file_service","app.services.extraction_service","app.models.physical_file","app.models.extraction","logging"],"backend/app/api/files.py":["fastapi","fastapi.responses","sqlalchemy.orm","app.core.database","app.models.document","pathlib","os","logging"],"backend/app/api/folders.py":["typing","fastapi","sqlalchemy.orm","pydantic","app.core.database","app.services.folder_service","logging"],"backend/app/api/nl_query.py":["fastapi","sqlalchemy.orm","typing","pydantic","datetime","logging","json","hashlib","app.core.database","app.services.claude_service","app.services.elastic_service","app.services.schema_registry","app.models.schema","app.models.extraction","app.models.query_pattern","sqlalchemy"],"backend/app/api/onboarding.py":["fastapi","sqlalchemy.orm","typing","pydantic","app.core.database","app.models.schema","app.services.reducto_service","app.services.claude_service","app.services.elastic_service","logging","os","tempfile","datetime","app.models.document","app.models.document","app.api.documents"],"backend/app/api/rematch.py":["fastapi","sqlalchemy.orm","sqlalchemy","typing","app.core.database","app.models.document","app.models.template","app.services.elastic_service","app.services.claude_service","app.utils.template_matching","logging"],"backend/app/api/search.py":["fastapi","typing","pydantic","app.services.elastic_service","app.services.claude_service","app.services.query_optimizer","app.core.database","app.models.schema","sqlalchemy.orm","logging","app.services.schema_registry","app.models.query_pattern","hashlib","datetime"],"backend/app/api/settings.py":["fastapi","sqlalchemy.orm","app.core.database","app.services.settings_service","app.models.settings","pydantic","typing","logging"],"backend/app/api/templates.py":["fastapi","sqlalchemy.orm","app.core.database","app.models.template","app.data.templates","logging"],"backend/app/api/verification.py":["fastapi","sqlalchemy.orm","sqlalchemy","typing","app.core.database","app.core.config","app.models.document","app.models.verification","app.services.elastic_service","datetime","uuid","logging"],"backend/app/core/config.py":["pydantic_settings","typing"],"backend/app/core/database.py":["sqlalchemy","sqlalchemy.ext.declarative","sqlalchemy.orm","app.core.config"],"backend/app/core/error_handlers.py":["fastapi","fastapi.responses","fastapi.exceptions","starlette.exceptions","logging","typing"],"backend/app/main.py":["fastapi","fastapi.middleware.cors","app.core.config","app.core.database","app.core.error_handlers","app.api","logging","app.services.elastic_service","app.core.database","app.services.settings_service","app.api.templates"],"backend/app/migrations/migrate_settings.py":["sys","pathlib","sqlalchemy.orm","app.core.database","app.models.settings","logging","argparse"],"backend/app/migrations/migrate_to_extractions.py":["sys","pathlib","sqlalchemy.orm","datetime","app.core.database","app.models.document","app.models.physical_file","app.models.extraction","app.models.batch","app.utils.hashing","logging","app.models.schema","app.models.template","app.models.template","argparse","traceback"],"backend/app/models/batch.py":["sqlalchemy","sqlalchemy.orm","datetime","app.core.database"],"backend/app/models/document.py":["sqlalchemy","sqlalchemy.orm","datetime","app.core.database"],"backend/app/models/extraction.py":["sqlalchemy","sqlalchemy.orm","datetime","app.core.database"],"backend/app/models/physical_file.py":["sqlalchemy","sqlalchemy.orm","datetime","app.core.database"],"backend/app/models/query_pattern.py":["sqlalchemy","datetime","app.core.database"],"backend/app/models/query_validation.py":["sqlalchemy","datetime","app.core.database"],"backend/app/models/schema.py":["sqlalchemy","sqlalchemy.orm","datetime","app.core.database"],"backend/app/models/settings.py":["sqlalchemy","sqlalchemy.orm","datetime","app.core.database","typing"],"backend/app/models/template.py":["sqlalchemy","sqlalchemy.sql","app.core.database"],"backend/app/models/verification.py":["sqlalchemy","sqlalchemy.orm","datetime","app.core.database"],"backend/app/services/claude_service.py":["anthropic","typing","datetime","app.core.config","app.core.exceptions","json","logging","traceback","datetime","calendar"],"backend/app/services/elastic_service.py":["elasticsearch","typing","app.core.config","datetime","logging","datetime"],"backend/app/services/export_service.py":["typing","datetime","pandas","io","json","sqlalchemy.orm","sqlalchemy","app.models.document","app.models.template","app.models.schema","logging"],"backend/app/services/extraction_service.py":["datetime","typing","sqlalchemy.orm","app.models.physical_file","app.models.extraction","app.models.template","app.models.schema","app.models.document","app.services.reducto_service","app.services.elastic_service","app.services.settings_service","app.core.exceptions","logging","app.models.batch","sqlalchemy"],"backend/app/services/field_normalizer.py":["typing","sqlalchemy.orm","logging"],"backend/app/services/file_service.py":["os","typing","fastapi","sqlalchemy.orm","app.models.physical_file","app.utils.hashing","app.core.config","app.core.exceptions","logging","sqlalchemy","app.models.extraction"],"backend/app/services/folder_service.py":["typing","sqlalchemy.orm","sqlalchemy","app.models.extraction","app.models.physical_file","app.models.template","logging","datetime"],"backend/app/services/query_optimizer.py":["typing","datetime","re","logging"],"backend/app/services/reducto_service.py":["reducto","typing","app.core.config","app.core.exceptions","logging","os","asyncio"],"backend/app/services/schema_registry.py":["sqlalchemy.orm","typing","app.models.schema","app.models.template","logging"],"backend/app/services/settings_service.py":["sqlalchemy.orm","app.models.settings","typing","json","logging"],"backend/app/utils/file_organization.py":["os","shutil","pathlib","typing","app.core.config","logging","datetime"],"backend/app/utils/hashing.py":["hashlib","typing"],"backend/app/utils/template_matching.py":["typing","sqlalchemy.orm","app.models.document","app.services.elastic_service","app.services.claude_service","app.services.settings_service","logging","re"],"backend/mcp_server/__main__.py":["asyncio","sys","logging","pathlib","mcp_server.server","mcp_server.config"],"backend/mcp_server/config.py":["pydantic_settings","typing","os"],"backend/mcp_server/prompts/analysis.py":["typing","logging","mcp_server.services.db_service"],"backend/mcp_server/resources/documents.py":["typing","logging","mcp_server.services.db_service"],"backend/mcp_server/resources/stats.py":["typing","logging","mcp_server.services.db_service","mcp_server.services.es_service","mcp_server.services.cache_service"],"backend/mcp_server/resources/templates.py":["typing","logging","mcp_server.services.db_service"],"backend/mcp_server/server.py":["fastmcp","typing","logging","mcp_server.config","mcp_server.tools","mcp_server.resources","mcp_server.resources","mcp_server.resources","mcp_server.prompts","json","json","json","json","json","json","mcp_server.services.db_service","mcp_server.services.es_service"],"backend/mcp_server/services/cache_service.py":["cachetools","typing","datetime","hashlib","json","logging","functools","mcp_server.config"],"backend/mcp_server/services/db_service.py":["sqlalchemy","sqlalchemy.orm","sqlalchemy.ext.asyncio","typing","datetime","logging","app.core.database","app.models.document","app.models.schema","app.models.verification","mcp_server.config","mcp_server.services.cache_service"],"backend/mcp_server/services/es_service.py":["elasticsearch","typing","datetime","logging","json","app.services.elastic_service","app.services.query_optimizer","mcp_server.config","mcp_server.services.cache_service","re","re"],"backend/mcp_server/tools/analytics.py":["typing","datetime","logging","mcp_server.services.db_service","sqlalchemy","app.models.document"],"backend/mcp_server/tools/audit.py":["typing","logging","mcp_server.services.db_service"],"backend/mcp_server/tools/documents.py":["typing","datetime","logging","mcp_server.services.db_service","mcp_server.services.es_service","datetime"],"backend/mcp_server/tools/templates.py":["typing","logging","mcp_server.services.db_service"],"backend/migrations/add_pipeline_fields.py":["sys","pathlib","sqlalchemy","app.core.database","sys"],"backend/tests/conftest.py":["pytest","fastapi.testclient","sqlalchemy","sqlalchemy.orm","app.core.database","app.main"],"backend/tests/test_analytics.py":["pytest","datetime","app.models.document","app.models.schema","app.models.verification"],"backend/tests/test_claude_service.py":["pytest","json","unittest.mock","app.services.claude_service","app.core.exceptions"],"backend/tests/test_reducto_service.py":["pytest","unittest.mock","app.services.reducto_service","app.core.exceptions"],"frontend/src/App.jsx":["react-router-dom","frontend/src/components/Layout.jsx","frontend/src/pages/BulkUpload.jsx","frontend/src/pages/BulkConfirmation.jsx","frontend/src/pages/DocumentsDashboard.jsx","frontend/src/pages/NaturalLanguageQuery.jsx","frontend/src/pages/Audit.jsx","frontend/src/pages/Analytics.jsx","frontend/src/pages/SchemaEditor.jsx","frontend/src/pages/Settings.jsx","frontend/src/pages/Export.jsx"],"frontend/src/components/Documents/BulkUpload.jsx":["react","react-dropzone","frontend/src/api/client.js"],"frontend/src/components/Documents/DocumentList.jsx":["react","frontend/src/api/client.js"],"frontend/src/components/ExportButton.jsx":["react","prop-types","frontend/src/components/ExportModal.jsx"],"frontend/src/components/ExportModal.jsx":["react","prop-types","frontend/src/api/client.js"],"frontend/src/components/FieldEditor.jsx":["react","@dnd-kit/core","@dnd-kit/sortable","@dnd-kit/utilities"],"frontend/src/components/Layout.jsx":["react-router-dom","react"],"frontend/src/components/Onboarding/SampleUpload.jsx":["react","react-dropzone","frontend/src/api/client.js"],"frontend/src/components/Onboarding/SchemaBuilder.jsx":["react","frontend/src/api/client.js"],"frontend/src/components/Onboarding/SchemaPreview.jsx":["react"],"frontend/src/components/Onboarding/SchemaPreviewInline.jsx":["react","frontend/src/api/client.js"],"frontend/src/components/Onboarding/TemplateLibrary.jsx":["react","frontend/src/api/client.js"],"frontend/src/components/PDFViewer.jsx":["react","react-pdf"],"frontend/src/pages/Analytics.jsx":["react","frontend/src/api/client.js","recharts"],"frontend/src/pages/Audit.jsx":["react","react-router-dom","frontend/src/components/PDFViewer.jsx"],"frontend/src/pages/BulkConfirmation.jsx":["react","react-router-dom"],"frontend/src/pages/BulkUpload.jsx":["react","react-router-dom","frontend/src/components/FieldEditor.jsx"],"frontend/src/pages/ChatSearch.jsx":["react","react-router-dom"],"frontend/src/pages/Documents.jsx":["react","frontend/src/components/Documents/BulkUpload.jsx","frontend/src/components/Documents/DocumentList.jsx"],"frontend/src/pages/DocumentsDashboard.jsx":["react","react-router-dom","frontend/src/components/FieldEditor.jsx","frontend/src/api/client.js"],"frontend/src/pages/Export.jsx":["react","frontend/src/api/client.js","frontend/src/components/ExportModal.jsx"],"frontend/src/pages/FolderView.jsx":["react","react-router-dom"],"frontend/src/pages/NaturalLanguageQuery.jsx":["react","frontend/src/api/client.js"],"frontend/src/pages/Onboarding.jsx":["react","react-router-dom","frontend/src/components/Onboarding/SampleUpload.jsx","frontend/src/components/Onboarding/TemplateLibrary.jsx","frontend/src/components/Onboarding/SchemaPreviewInline.jsx"],"frontend/src/pages/SchemaEditor.jsx":["react","react-router-dom"],"frontend/src/pages/Settings.jsx":["react"],"frontend/src/pages/Verify.jsx":["react","react-router-dom","frontend/src/api/client.js"],"test-upload.js":["fs","path","form-data"],"test_e2e.py":["requests","json","time","pathlib","traceback"],"test_hybrid_matching.py":["asyncio","sys","os","app.services.elastic_service","app.core.config"],"test_upload.py":["requests","sys","traceback"]},"dir_purposes":{"backend/app/api":"API endpoints and route handlers","backend/app/migrations":"Database migration files","backend/app/models":"Data models and database schemas","backend/app/services":"Business logic and external service integrations","backend/app/utils":"Shared utility functions and helpers","backend/mcp_server/services":"Business logic and external service integrations","backend/migrations":"Database migration files","backend/tests":"Test files and test utilities","docs":"Project documentation","frontend/src":"Source code root directory","frontend/src/api":"API endpoints and route handlers","frontend/src/components":"Reusable UI components","test_documents":"Test files and test utilities"},"staleness":1760225803.449917}